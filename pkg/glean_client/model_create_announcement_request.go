/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CreateAnnouncementRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAnnouncementRequest{}

// CreateAnnouncementRequest struct for CreateAnnouncementRequest
type CreateAnnouncementRequest struct {
	// The date and time at which the announcement becomes active.
	StartTime time.Time `json:"startTime"`
	// The date and time at which the announcement expires.
	EndTime time.Time `json:"endTime"`
	// The headline of the announcement.
	Title string `json:"title"`
	Body *StructuredText `json:"body,omitempty"`
	// An emoji used to indicate the nature of the announcement.
	Emoji *string `json:"emoji,omitempty"`
	Thumbnail *Thumbnail `json:"thumbnail,omitempty"`
	Banner *Thumbnail `json:"banner,omitempty"`
	// Filters which restrict who should see the announcement. Values are taken from the corresponding filters in people search.
	AudienceFilters []FacetFilter `json:"audienceFilters,omitempty"`
	// The Glean Document ID of the source document this Announcement was created from (e.g. Slack thread).
	SourceDocumentId *string `json:"sourceDocumentId,omitempty"`
	// Whether or not to hide an author attribution.
	HideAttribution *bool `json:"hideAttribution,omitempty"`
	// This determines whether this is a Social Feed post or a regular announcement.
	Channel *string `json:"channel,omitempty"`
	// This determines whether this is an external-link post or a regular announcement post. TEXT - Regular announcement that can contain rich text. LINK - Announcement that is linked to an external site.
	PostType *string `json:"postType,omitempty"`
	// Used by the Social Feed to pin posts to the front of the feed.
	IsPrioritized *bool `json:"isPrioritized,omitempty"`
	// URL for viewing the announcement. It will be set to document URL for announcements from other datasources e.g. simpplr. Can only be written when channel=\"SOCIAL_FEED\".
	ViewUrl *string `json:"viewUrl,omitempty"`
}

type _CreateAnnouncementRequest CreateAnnouncementRequest

// NewCreateAnnouncementRequest instantiates a new CreateAnnouncementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAnnouncementRequest(startTime time.Time, endTime time.Time, title string) *CreateAnnouncementRequest {
	this := CreateAnnouncementRequest{}
	this.StartTime = startTime
	this.EndTime = endTime
	this.Title = title
	return &this
}

// NewCreateAnnouncementRequestWithDefaults instantiates a new CreateAnnouncementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAnnouncementRequestWithDefaults() *CreateAnnouncementRequest {
	this := CreateAnnouncementRequest{}
	return &this
}

// GetStartTime returns the StartTime field value
func (o *CreateAnnouncementRequest) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *CreateAnnouncementRequest) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *CreateAnnouncementRequest) GetEndTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetEndTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *CreateAnnouncementRequest) SetEndTime(v time.Time) {
	o.EndTime = v
}

// GetTitle returns the Title field value
func (o *CreateAnnouncementRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CreateAnnouncementRequest) SetTitle(v string) {
	o.Title = v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetBody() StructuredText {
	if o == nil || IsNil(o.Body) {
		var ret StructuredText
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetBodyOk() (*StructuredText, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given StructuredText and assigns it to the Body field.
func (o *CreateAnnouncementRequest) SetBody(v StructuredText) {
	o.Body = &v
}

// GetEmoji returns the Emoji field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetEmoji() string {
	if o == nil || IsNil(o.Emoji) {
		var ret string
		return ret
	}
	return *o.Emoji
}

// GetEmojiOk returns a tuple with the Emoji field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetEmojiOk() (*string, bool) {
	if o == nil || IsNil(o.Emoji) {
		return nil, false
	}
	return o.Emoji, true
}

// HasEmoji returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasEmoji() bool {
	if o != nil && !IsNil(o.Emoji) {
		return true
	}

	return false
}

// SetEmoji gets a reference to the given string and assigns it to the Emoji field.
func (o *CreateAnnouncementRequest) SetEmoji(v string) {
	o.Emoji = &v
}

// GetThumbnail returns the Thumbnail field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetThumbnail() Thumbnail {
	if o == nil || IsNil(o.Thumbnail) {
		var ret Thumbnail
		return ret
	}
	return *o.Thumbnail
}

// GetThumbnailOk returns a tuple with the Thumbnail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetThumbnailOk() (*Thumbnail, bool) {
	if o == nil || IsNil(o.Thumbnail) {
		return nil, false
	}
	return o.Thumbnail, true
}

// HasThumbnail returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasThumbnail() bool {
	if o != nil && !IsNil(o.Thumbnail) {
		return true
	}

	return false
}

// SetThumbnail gets a reference to the given Thumbnail and assigns it to the Thumbnail field.
func (o *CreateAnnouncementRequest) SetThumbnail(v Thumbnail) {
	o.Thumbnail = &v
}

// GetBanner returns the Banner field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetBanner() Thumbnail {
	if o == nil || IsNil(o.Banner) {
		var ret Thumbnail
		return ret
	}
	return *o.Banner
}

// GetBannerOk returns a tuple with the Banner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetBannerOk() (*Thumbnail, bool) {
	if o == nil || IsNil(o.Banner) {
		return nil, false
	}
	return o.Banner, true
}

// HasBanner returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasBanner() bool {
	if o != nil && !IsNil(o.Banner) {
		return true
	}

	return false
}

// SetBanner gets a reference to the given Thumbnail and assigns it to the Banner field.
func (o *CreateAnnouncementRequest) SetBanner(v Thumbnail) {
	o.Banner = &v
}

// GetAudienceFilters returns the AudienceFilters field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetAudienceFilters() []FacetFilter {
	if o == nil || IsNil(o.AudienceFilters) {
		var ret []FacetFilter
		return ret
	}
	return o.AudienceFilters
}

// GetAudienceFiltersOk returns a tuple with the AudienceFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetAudienceFiltersOk() ([]FacetFilter, bool) {
	if o == nil || IsNil(o.AudienceFilters) {
		return nil, false
	}
	return o.AudienceFilters, true
}

// HasAudienceFilters returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasAudienceFilters() bool {
	if o != nil && !IsNil(o.AudienceFilters) {
		return true
	}

	return false
}

// SetAudienceFilters gets a reference to the given []FacetFilter and assigns it to the AudienceFilters field.
func (o *CreateAnnouncementRequest) SetAudienceFilters(v []FacetFilter) {
	o.AudienceFilters = v
}

// GetSourceDocumentId returns the SourceDocumentId field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetSourceDocumentId() string {
	if o == nil || IsNil(o.SourceDocumentId) {
		var ret string
		return ret
	}
	return *o.SourceDocumentId
}

// GetSourceDocumentIdOk returns a tuple with the SourceDocumentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetSourceDocumentIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceDocumentId) {
		return nil, false
	}
	return o.SourceDocumentId, true
}

// HasSourceDocumentId returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasSourceDocumentId() bool {
	if o != nil && !IsNil(o.SourceDocumentId) {
		return true
	}

	return false
}

// SetSourceDocumentId gets a reference to the given string and assigns it to the SourceDocumentId field.
func (o *CreateAnnouncementRequest) SetSourceDocumentId(v string) {
	o.SourceDocumentId = &v
}

// GetHideAttribution returns the HideAttribution field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetHideAttribution() bool {
	if o == nil || IsNil(o.HideAttribution) {
		var ret bool
		return ret
	}
	return *o.HideAttribution
}

// GetHideAttributionOk returns a tuple with the HideAttribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetHideAttributionOk() (*bool, bool) {
	if o == nil || IsNil(o.HideAttribution) {
		return nil, false
	}
	return o.HideAttribution, true
}

// HasHideAttribution returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasHideAttribution() bool {
	if o != nil && !IsNil(o.HideAttribution) {
		return true
	}

	return false
}

// SetHideAttribution gets a reference to the given bool and assigns it to the HideAttribution field.
func (o *CreateAnnouncementRequest) SetHideAttribution(v bool) {
	o.HideAttribution = &v
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetChannel() string {
	if o == nil || IsNil(o.Channel) {
		var ret string
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetChannelOk() (*string, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given string and assigns it to the Channel field.
func (o *CreateAnnouncementRequest) SetChannel(v string) {
	o.Channel = &v
}

// GetPostType returns the PostType field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetPostType() string {
	if o == nil || IsNil(o.PostType) {
		var ret string
		return ret
	}
	return *o.PostType
}

// GetPostTypeOk returns a tuple with the PostType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetPostTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PostType) {
		return nil, false
	}
	return o.PostType, true
}

// HasPostType returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasPostType() bool {
	if o != nil && !IsNil(o.PostType) {
		return true
	}

	return false
}

// SetPostType gets a reference to the given string and assigns it to the PostType field.
func (o *CreateAnnouncementRequest) SetPostType(v string) {
	o.PostType = &v
}

// GetIsPrioritized returns the IsPrioritized field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetIsPrioritized() bool {
	if o == nil || IsNil(o.IsPrioritized) {
		var ret bool
		return ret
	}
	return *o.IsPrioritized
}

// GetIsPrioritizedOk returns a tuple with the IsPrioritized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetIsPrioritizedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPrioritized) {
		return nil, false
	}
	return o.IsPrioritized, true
}

// HasIsPrioritized returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasIsPrioritized() bool {
	if o != nil && !IsNil(o.IsPrioritized) {
		return true
	}

	return false
}

// SetIsPrioritized gets a reference to the given bool and assigns it to the IsPrioritized field.
func (o *CreateAnnouncementRequest) SetIsPrioritized(v bool) {
	o.IsPrioritized = &v
}

// GetViewUrl returns the ViewUrl field value if set, zero value otherwise.
func (o *CreateAnnouncementRequest) GetViewUrl() string {
	if o == nil || IsNil(o.ViewUrl) {
		var ret string
		return ret
	}
	return *o.ViewUrl
}

// GetViewUrlOk returns a tuple with the ViewUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAnnouncementRequest) GetViewUrlOk() (*string, bool) {
	if o == nil || IsNil(o.ViewUrl) {
		return nil, false
	}
	return o.ViewUrl, true
}

// HasViewUrl returns a boolean if a field has been set.
func (o *CreateAnnouncementRequest) HasViewUrl() bool {
	if o != nil && !IsNil(o.ViewUrl) {
		return true
	}

	return false
}

// SetViewUrl gets a reference to the given string and assigns it to the ViewUrl field.
func (o *CreateAnnouncementRequest) SetViewUrl(v string) {
	o.ViewUrl = &v
}

func (o CreateAnnouncementRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAnnouncementRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	toSerialize["title"] = o.Title
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.Emoji) {
		toSerialize["emoji"] = o.Emoji
	}
	if !IsNil(o.Thumbnail) {
		toSerialize["thumbnail"] = o.Thumbnail
	}
	if !IsNil(o.Banner) {
		toSerialize["banner"] = o.Banner
	}
	if !IsNil(o.AudienceFilters) {
		toSerialize["audienceFilters"] = o.AudienceFilters
	}
	if !IsNil(o.SourceDocumentId) {
		toSerialize["sourceDocumentId"] = o.SourceDocumentId
	}
	if !IsNil(o.HideAttribution) {
		toSerialize["hideAttribution"] = o.HideAttribution
	}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !IsNil(o.PostType) {
		toSerialize["postType"] = o.PostType
	}
	if !IsNil(o.IsPrioritized) {
		toSerialize["isPrioritized"] = o.IsPrioritized
	}
	if !IsNil(o.ViewUrl) {
		toSerialize["viewUrl"] = o.ViewUrl
	}
	return toSerialize, nil
}

func (o *CreateAnnouncementRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startTime",
		"endTime",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAnnouncementRequest := _CreateAnnouncementRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateAnnouncementRequest)

	if err != nil {
		return err
	}

	*o = CreateAnnouncementRequest(varCreateAnnouncementRequest)

	return err
}

type NullableCreateAnnouncementRequest struct {
	value *CreateAnnouncementRequest
	isSet bool
}

func (v NullableCreateAnnouncementRequest) Get() *CreateAnnouncementRequest {
	return v.value
}

func (v *NullableCreateAnnouncementRequest) Set(val *CreateAnnouncementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAnnouncementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAnnouncementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAnnouncementRequest(val *CreateAnnouncementRequest) *NullableCreateAnnouncementRequest {
	return &NullableCreateAnnouncementRequest{value: val, isSet: true}
}

func (v NullableCreateAnnouncementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAnnouncementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


