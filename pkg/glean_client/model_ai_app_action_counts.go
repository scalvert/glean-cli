/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the AiAppActionCounts type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AiAppActionCounts{}

// AiAppActionCounts Map from action to frequency.
type AiAppActionCounts struct {
	// Total number of Slackbot responses, both proactive and reactive.
	TotalSlackbotResponses *int32 `json:"totalSlackbotResponses,omitempty"`
	// Total number of Slackbot responses shared publicly (upvoted).
	TotalSlackbotResponsesShared *int32 `json:"totalSlackbotResponsesShared,omitempty"`
	// Total number of Slackbot responses rejected as not helpful (downvoted).
	TotalSlackbotResponsesNotHelpful *int32 `json:"totalSlackbotResponsesNotHelpful,omitempty"`
	// Total number of Chat messages sent in requested period.
	TotalChatMessages *int32 `json:"totalChatMessages,omitempty"`
	// Total number of Chat messages which received upvotes by the user.
	TotalUpvotes *int32 `json:"totalUpvotes,omitempty"`
	// Total number of Chat messages which received downvotes by the user.
	TotalDownvotes *int32 `json:"totalDownvotes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AiAppActionCounts AiAppActionCounts

// NewAiAppActionCounts instantiates a new AiAppActionCounts object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAiAppActionCounts() *AiAppActionCounts {
	this := AiAppActionCounts{}
	return &this
}

// NewAiAppActionCountsWithDefaults instantiates a new AiAppActionCounts object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAiAppActionCountsWithDefaults() *AiAppActionCounts {
	this := AiAppActionCounts{}
	return &this
}

// GetTotalSlackbotResponses returns the TotalSlackbotResponses field value if set, zero value otherwise.
func (o *AiAppActionCounts) GetTotalSlackbotResponses() int32 {
	if o == nil || IsNil(o.TotalSlackbotResponses) {
		var ret int32
		return ret
	}
	return *o.TotalSlackbotResponses
}

// GetTotalSlackbotResponsesOk returns a tuple with the TotalSlackbotResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiAppActionCounts) GetTotalSlackbotResponsesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSlackbotResponses) {
		return nil, false
	}
	return o.TotalSlackbotResponses, true
}

// HasTotalSlackbotResponses returns a boolean if a field has been set.
func (o *AiAppActionCounts) HasTotalSlackbotResponses() bool {
	if o != nil && !IsNil(o.TotalSlackbotResponses) {
		return true
	}

	return false
}

// SetTotalSlackbotResponses gets a reference to the given int32 and assigns it to the TotalSlackbotResponses field.
func (o *AiAppActionCounts) SetTotalSlackbotResponses(v int32) {
	o.TotalSlackbotResponses = &v
}

// GetTotalSlackbotResponsesShared returns the TotalSlackbotResponsesShared field value if set, zero value otherwise.
func (o *AiAppActionCounts) GetTotalSlackbotResponsesShared() int32 {
	if o == nil || IsNil(o.TotalSlackbotResponsesShared) {
		var ret int32
		return ret
	}
	return *o.TotalSlackbotResponsesShared
}

// GetTotalSlackbotResponsesSharedOk returns a tuple with the TotalSlackbotResponsesShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiAppActionCounts) GetTotalSlackbotResponsesSharedOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSlackbotResponsesShared) {
		return nil, false
	}
	return o.TotalSlackbotResponsesShared, true
}

// HasTotalSlackbotResponsesShared returns a boolean if a field has been set.
func (o *AiAppActionCounts) HasTotalSlackbotResponsesShared() bool {
	if o != nil && !IsNil(o.TotalSlackbotResponsesShared) {
		return true
	}

	return false
}

// SetTotalSlackbotResponsesShared gets a reference to the given int32 and assigns it to the TotalSlackbotResponsesShared field.
func (o *AiAppActionCounts) SetTotalSlackbotResponsesShared(v int32) {
	o.TotalSlackbotResponsesShared = &v
}

// GetTotalSlackbotResponsesNotHelpful returns the TotalSlackbotResponsesNotHelpful field value if set, zero value otherwise.
func (o *AiAppActionCounts) GetTotalSlackbotResponsesNotHelpful() int32 {
	if o == nil || IsNil(o.TotalSlackbotResponsesNotHelpful) {
		var ret int32
		return ret
	}
	return *o.TotalSlackbotResponsesNotHelpful
}

// GetTotalSlackbotResponsesNotHelpfulOk returns a tuple with the TotalSlackbotResponsesNotHelpful field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiAppActionCounts) GetTotalSlackbotResponsesNotHelpfulOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSlackbotResponsesNotHelpful) {
		return nil, false
	}
	return o.TotalSlackbotResponsesNotHelpful, true
}

// HasTotalSlackbotResponsesNotHelpful returns a boolean if a field has been set.
func (o *AiAppActionCounts) HasTotalSlackbotResponsesNotHelpful() bool {
	if o != nil && !IsNil(o.TotalSlackbotResponsesNotHelpful) {
		return true
	}

	return false
}

// SetTotalSlackbotResponsesNotHelpful gets a reference to the given int32 and assigns it to the TotalSlackbotResponsesNotHelpful field.
func (o *AiAppActionCounts) SetTotalSlackbotResponsesNotHelpful(v int32) {
	o.TotalSlackbotResponsesNotHelpful = &v
}

// GetTotalChatMessages returns the TotalChatMessages field value if set, zero value otherwise.
func (o *AiAppActionCounts) GetTotalChatMessages() int32 {
	if o == nil || IsNil(o.TotalChatMessages) {
		var ret int32
		return ret
	}
	return *o.TotalChatMessages
}

// GetTotalChatMessagesOk returns a tuple with the TotalChatMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiAppActionCounts) GetTotalChatMessagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalChatMessages) {
		return nil, false
	}
	return o.TotalChatMessages, true
}

// HasTotalChatMessages returns a boolean if a field has been set.
func (o *AiAppActionCounts) HasTotalChatMessages() bool {
	if o != nil && !IsNil(o.TotalChatMessages) {
		return true
	}

	return false
}

// SetTotalChatMessages gets a reference to the given int32 and assigns it to the TotalChatMessages field.
func (o *AiAppActionCounts) SetTotalChatMessages(v int32) {
	o.TotalChatMessages = &v
}

// GetTotalUpvotes returns the TotalUpvotes field value if set, zero value otherwise.
func (o *AiAppActionCounts) GetTotalUpvotes() int32 {
	if o == nil || IsNil(o.TotalUpvotes) {
		var ret int32
		return ret
	}
	return *o.TotalUpvotes
}

// GetTotalUpvotesOk returns a tuple with the TotalUpvotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiAppActionCounts) GetTotalUpvotesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalUpvotes) {
		return nil, false
	}
	return o.TotalUpvotes, true
}

// HasTotalUpvotes returns a boolean if a field has been set.
func (o *AiAppActionCounts) HasTotalUpvotes() bool {
	if o != nil && !IsNil(o.TotalUpvotes) {
		return true
	}

	return false
}

// SetTotalUpvotes gets a reference to the given int32 and assigns it to the TotalUpvotes field.
func (o *AiAppActionCounts) SetTotalUpvotes(v int32) {
	o.TotalUpvotes = &v
}

// GetTotalDownvotes returns the TotalDownvotes field value if set, zero value otherwise.
func (o *AiAppActionCounts) GetTotalDownvotes() int32 {
	if o == nil || IsNil(o.TotalDownvotes) {
		var ret int32
		return ret
	}
	return *o.TotalDownvotes
}

// GetTotalDownvotesOk returns a tuple with the TotalDownvotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiAppActionCounts) GetTotalDownvotesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalDownvotes) {
		return nil, false
	}
	return o.TotalDownvotes, true
}

// HasTotalDownvotes returns a boolean if a field has been set.
func (o *AiAppActionCounts) HasTotalDownvotes() bool {
	if o != nil && !IsNil(o.TotalDownvotes) {
		return true
	}

	return false
}

// SetTotalDownvotes gets a reference to the given int32 and assigns it to the TotalDownvotes field.
func (o *AiAppActionCounts) SetTotalDownvotes(v int32) {
	o.TotalDownvotes = &v
}

func (o AiAppActionCounts) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AiAppActionCounts) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalSlackbotResponses) {
		toSerialize["totalSlackbotResponses"] = o.TotalSlackbotResponses
	}
	if !IsNil(o.TotalSlackbotResponsesShared) {
		toSerialize["totalSlackbotResponsesShared"] = o.TotalSlackbotResponsesShared
	}
	if !IsNil(o.TotalSlackbotResponsesNotHelpful) {
		toSerialize["totalSlackbotResponsesNotHelpful"] = o.TotalSlackbotResponsesNotHelpful
	}
	if !IsNil(o.TotalChatMessages) {
		toSerialize["totalChatMessages"] = o.TotalChatMessages
	}
	if !IsNil(o.TotalUpvotes) {
		toSerialize["totalUpvotes"] = o.TotalUpvotes
	}
	if !IsNil(o.TotalDownvotes) {
		toSerialize["totalDownvotes"] = o.TotalDownvotes
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AiAppActionCounts) UnmarshalJSON(data []byte) (err error) {
	varAiAppActionCounts := _AiAppActionCounts{}

	err = json.Unmarshal(data, &varAiAppActionCounts)

	if err != nil {
		return err
	}

	*o = AiAppActionCounts(varAiAppActionCounts)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "totalSlackbotResponses")
		delete(additionalProperties, "totalSlackbotResponsesShared")
		delete(additionalProperties, "totalSlackbotResponsesNotHelpful")
		delete(additionalProperties, "totalChatMessages")
		delete(additionalProperties, "totalUpvotes")
		delete(additionalProperties, "totalDownvotes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAiAppActionCounts struct {
	value *AiAppActionCounts
	isSet bool
}

func (v NullableAiAppActionCounts) Get() *AiAppActionCounts {
	return v.value
}

func (v *NullableAiAppActionCounts) Set(val *AiAppActionCounts) {
	v.value = val
	v.isSet = true
}

func (v NullableAiAppActionCounts) IsSet() bool {
	return v.isSet
}

func (v *NullableAiAppActionCounts) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAiAppActionCounts(val *AiAppActionCounts) *NullableAiAppActionCounts {
	return &NullableAiAppActionCounts{value: val, isSet: true}
}

func (v NullableAiAppActionCounts) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAiAppActionCounts) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


