/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the PreviewUgcResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PreviewUgcResponse{}

// PreviewUgcResponse struct for PreviewUgcResponse
type PreviewUgcResponse struct {
	Announcement *Announcement `json:"announcement,omitempty"`
	Answer *Answer `json:"answer,omitempty"`
}

// NewPreviewUgcResponse instantiates a new PreviewUgcResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPreviewUgcResponse() *PreviewUgcResponse {
	this := PreviewUgcResponse{}
	return &this
}

// NewPreviewUgcResponseWithDefaults instantiates a new PreviewUgcResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPreviewUgcResponseWithDefaults() *PreviewUgcResponse {
	this := PreviewUgcResponse{}
	return &this
}

// GetAnnouncement returns the Announcement field value if set, zero value otherwise.
func (o *PreviewUgcResponse) GetAnnouncement() Announcement {
	if o == nil || IsNil(o.Announcement) {
		var ret Announcement
		return ret
	}
	return *o.Announcement
}

// GetAnnouncementOk returns a tuple with the Announcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewUgcResponse) GetAnnouncementOk() (*Announcement, bool) {
	if o == nil || IsNil(o.Announcement) {
		return nil, false
	}
	return o.Announcement, true
}

// HasAnnouncement returns a boolean if a field has been set.
func (o *PreviewUgcResponse) HasAnnouncement() bool {
	if o != nil && !IsNil(o.Announcement) {
		return true
	}

	return false
}

// SetAnnouncement gets a reference to the given Announcement and assigns it to the Announcement field.
func (o *PreviewUgcResponse) SetAnnouncement(v Announcement) {
	o.Announcement = &v
}

// GetAnswer returns the Answer field value if set, zero value otherwise.
func (o *PreviewUgcResponse) GetAnswer() Answer {
	if o == nil || IsNil(o.Answer) {
		var ret Answer
		return ret
	}
	return *o.Answer
}

// GetAnswerOk returns a tuple with the Answer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PreviewUgcResponse) GetAnswerOk() (*Answer, bool) {
	if o == nil || IsNil(o.Answer) {
		return nil, false
	}
	return o.Answer, true
}

// HasAnswer returns a boolean if a field has been set.
func (o *PreviewUgcResponse) HasAnswer() bool {
	if o != nil && !IsNil(o.Answer) {
		return true
	}

	return false
}

// SetAnswer gets a reference to the given Answer and assigns it to the Answer field.
func (o *PreviewUgcResponse) SetAnswer(v Answer) {
	o.Answer = &v
}

func (o PreviewUgcResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PreviewUgcResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Announcement) {
		toSerialize["announcement"] = o.Announcement
	}
	if !IsNil(o.Answer) {
		toSerialize["answer"] = o.Answer
	}
	return toSerialize, nil
}

type NullablePreviewUgcResponse struct {
	value *PreviewUgcResponse
	isSet bool
}

func (v NullablePreviewUgcResponse) Get() *PreviewUgcResponse {
	return v.value
}

func (v *NullablePreviewUgcResponse) Set(val *PreviewUgcResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePreviewUgcResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePreviewUgcResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePreviewUgcResponse(val *PreviewUgcResponse) *NullablePreviewUgcResponse {
	return &NullablePreviewUgcResponse{value: val, isSet: true}
}

func (v NullablePreviewUgcResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePreviewUgcResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


