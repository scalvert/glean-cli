/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the UserInsightsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserInsightsResponse{}

// UserInsightsResponse struct for UserInsightsResponse
type UserInsightsResponse struct {
	// Unix timestamp of the last activity processed to make the response (in seconds since epoch UTC).
	LastLogTimestamp *int32 `json:"lastLogTimestamp,omitempty"`
	// Insights for all active users with respect to set of actions.
	ActivityInsights []UserActivityInsight `json:"activityInsights,omitempty"`
	// Insights for all in inactive users with respect to set of actions and time period. Activity count will be set to 0.
	InactiveInsights []UserActivityInsight `json:"inactiveInsights,omitempty"`
	// Total number of teammates that have logged in to the product, that are still valid teammates.
	TotalTeammates *int32 `json:"totalTeammates,omitempty"`
	// Total number of active users in the requested period.
	TotalActiveUsers *int32 `json:"totalActiveUsers,omitempty"`
	// list of departments applicable for users tab.
	Departments []string `json:"departments,omitempty"`
}

// NewUserInsightsResponse instantiates a new UserInsightsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserInsightsResponse() *UserInsightsResponse {
	this := UserInsightsResponse{}
	return &this
}

// NewUserInsightsResponseWithDefaults instantiates a new UserInsightsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserInsightsResponseWithDefaults() *UserInsightsResponse {
	this := UserInsightsResponse{}
	return &this
}

// GetLastLogTimestamp returns the LastLogTimestamp field value if set, zero value otherwise.
func (o *UserInsightsResponse) GetLastLogTimestamp() int32 {
	if o == nil || IsNil(o.LastLogTimestamp) {
		var ret int32
		return ret
	}
	return *o.LastLogTimestamp
}

// GetLastLogTimestampOk returns a tuple with the LastLogTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInsightsResponse) GetLastLogTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.LastLogTimestamp) {
		return nil, false
	}
	return o.LastLogTimestamp, true
}

// HasLastLogTimestamp returns a boolean if a field has been set.
func (o *UserInsightsResponse) HasLastLogTimestamp() bool {
	if o != nil && !IsNil(o.LastLogTimestamp) {
		return true
	}

	return false
}

// SetLastLogTimestamp gets a reference to the given int32 and assigns it to the LastLogTimestamp field.
func (o *UserInsightsResponse) SetLastLogTimestamp(v int32) {
	o.LastLogTimestamp = &v
}

// GetActivityInsights returns the ActivityInsights field value if set, zero value otherwise.
func (o *UserInsightsResponse) GetActivityInsights() []UserActivityInsight {
	if o == nil || IsNil(o.ActivityInsights) {
		var ret []UserActivityInsight
		return ret
	}
	return o.ActivityInsights
}

// GetActivityInsightsOk returns a tuple with the ActivityInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInsightsResponse) GetActivityInsightsOk() ([]UserActivityInsight, bool) {
	if o == nil || IsNil(o.ActivityInsights) {
		return nil, false
	}
	return o.ActivityInsights, true
}

// HasActivityInsights returns a boolean if a field has been set.
func (o *UserInsightsResponse) HasActivityInsights() bool {
	if o != nil && !IsNil(o.ActivityInsights) {
		return true
	}

	return false
}

// SetActivityInsights gets a reference to the given []UserActivityInsight and assigns it to the ActivityInsights field.
func (o *UserInsightsResponse) SetActivityInsights(v []UserActivityInsight) {
	o.ActivityInsights = v
}

// GetInactiveInsights returns the InactiveInsights field value if set, zero value otherwise.
func (o *UserInsightsResponse) GetInactiveInsights() []UserActivityInsight {
	if o == nil || IsNil(o.InactiveInsights) {
		var ret []UserActivityInsight
		return ret
	}
	return o.InactiveInsights
}

// GetInactiveInsightsOk returns a tuple with the InactiveInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInsightsResponse) GetInactiveInsightsOk() ([]UserActivityInsight, bool) {
	if o == nil || IsNil(o.InactiveInsights) {
		return nil, false
	}
	return o.InactiveInsights, true
}

// HasInactiveInsights returns a boolean if a field has been set.
func (o *UserInsightsResponse) HasInactiveInsights() bool {
	if o != nil && !IsNil(o.InactiveInsights) {
		return true
	}

	return false
}

// SetInactiveInsights gets a reference to the given []UserActivityInsight and assigns it to the InactiveInsights field.
func (o *UserInsightsResponse) SetInactiveInsights(v []UserActivityInsight) {
	o.InactiveInsights = v
}

// GetTotalTeammates returns the TotalTeammates field value if set, zero value otherwise.
func (o *UserInsightsResponse) GetTotalTeammates() int32 {
	if o == nil || IsNil(o.TotalTeammates) {
		var ret int32
		return ret
	}
	return *o.TotalTeammates
}

// GetTotalTeammatesOk returns a tuple with the TotalTeammates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInsightsResponse) GetTotalTeammatesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalTeammates) {
		return nil, false
	}
	return o.TotalTeammates, true
}

// HasTotalTeammates returns a boolean if a field has been set.
func (o *UserInsightsResponse) HasTotalTeammates() bool {
	if o != nil && !IsNil(o.TotalTeammates) {
		return true
	}

	return false
}

// SetTotalTeammates gets a reference to the given int32 and assigns it to the TotalTeammates field.
func (o *UserInsightsResponse) SetTotalTeammates(v int32) {
	o.TotalTeammates = &v
}

// GetTotalActiveUsers returns the TotalActiveUsers field value if set, zero value otherwise.
func (o *UserInsightsResponse) GetTotalActiveUsers() int32 {
	if o == nil || IsNil(o.TotalActiveUsers) {
		var ret int32
		return ret
	}
	return *o.TotalActiveUsers
}

// GetTotalActiveUsersOk returns a tuple with the TotalActiveUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInsightsResponse) GetTotalActiveUsersOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalActiveUsers) {
		return nil, false
	}
	return o.TotalActiveUsers, true
}

// HasTotalActiveUsers returns a boolean if a field has been set.
func (o *UserInsightsResponse) HasTotalActiveUsers() bool {
	if o != nil && !IsNil(o.TotalActiveUsers) {
		return true
	}

	return false
}

// SetTotalActiveUsers gets a reference to the given int32 and assigns it to the TotalActiveUsers field.
func (o *UserInsightsResponse) SetTotalActiveUsers(v int32) {
	o.TotalActiveUsers = &v
}

// GetDepartments returns the Departments field value if set, zero value otherwise.
func (o *UserInsightsResponse) GetDepartments() []string {
	if o == nil || IsNil(o.Departments) {
		var ret []string
		return ret
	}
	return o.Departments
}

// GetDepartmentsOk returns a tuple with the Departments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInsightsResponse) GetDepartmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Departments) {
		return nil, false
	}
	return o.Departments, true
}

// HasDepartments returns a boolean if a field has been set.
func (o *UserInsightsResponse) HasDepartments() bool {
	if o != nil && !IsNil(o.Departments) {
		return true
	}

	return false
}

// SetDepartments gets a reference to the given []string and assigns it to the Departments field.
func (o *UserInsightsResponse) SetDepartments(v []string) {
	o.Departments = v
}

func (o UserInsightsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserInsightsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastLogTimestamp) {
		toSerialize["lastLogTimestamp"] = o.LastLogTimestamp
	}
	if !IsNil(o.ActivityInsights) {
		toSerialize["activityInsights"] = o.ActivityInsights
	}
	if !IsNil(o.InactiveInsights) {
		toSerialize["inactiveInsights"] = o.InactiveInsights
	}
	if !IsNil(o.TotalTeammates) {
		toSerialize["totalTeammates"] = o.TotalTeammates
	}
	if !IsNil(o.TotalActiveUsers) {
		toSerialize["totalActiveUsers"] = o.TotalActiveUsers
	}
	if !IsNil(o.Departments) {
		toSerialize["departments"] = o.Departments
	}
	return toSerialize, nil
}

type NullableUserInsightsResponse struct {
	value *UserInsightsResponse
	isSet bool
}

func (v NullableUserInsightsResponse) Get() *UserInsightsResponse {
	return v.value
}

func (v *NullableUserInsightsResponse) Set(val *UserInsightsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUserInsightsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUserInsightsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserInsightsResponse(val *UserInsightsResponse) *NullableUserInsightsResponse {
	return &NullableUserInsightsResponse{value: val, isSet: true}
}

func (v NullableUserInsightsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserInsightsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


