/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the FeedbackCustomizations type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FeedbackCustomizations{}

// FeedbackCustomizations struct for FeedbackCustomizations
type FeedbackCustomizations struct {
	// The channels to which feedback will be sent for any feature that does not have specific configuration.
	DefaultChannels []FeedbackChannel `json:"defaultChannels,omitempty"`
	// The channels to which feedback will be sent for individual features. The keys of the map will match the values in FeedbackFeature. Features not present in the map should use defaultChannels.
	FeatureChannels *map[string][]FeedbackChannel `json:"featureChannels,omitempty"`
	// A custom message shown to users during the in-product feedback flow, e.g. to warn users against sending sensitive or personally-identifying information.
	Disclaimer *string `json:"disclaimer,omitempty"`
	// An optional link to a privacy policy provided by the users' company that will be shown to them during the in-product feedback flow if their company will receive their feedback. Glean's policy will also be shown if Glean is receiving the feedback.
	CompanyPrivacyPolicyLink *string `json:"companyPrivacyPolicyLink,omitempty"`
	// User visible text shown when seeking support to guide them to their company's internal support page when appropriate
	SupportMessage *string `json:"supportMessage,omitempty"`
	// User visible text that will link to the user's company's internal support page
	SupportLinkText *string `json:"supportLinkText,omitempty"`
	// URL to the user's company's internal suport page
	SupportLink *string `json:"supportLink,omitempty"`
}

// NewFeedbackCustomizations instantiates a new FeedbackCustomizations object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeedbackCustomizations() *FeedbackCustomizations {
	this := FeedbackCustomizations{}
	return &this
}

// NewFeedbackCustomizationsWithDefaults instantiates a new FeedbackCustomizations object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedbackCustomizationsWithDefaults() *FeedbackCustomizations {
	this := FeedbackCustomizations{}
	return &this
}

// GetDefaultChannels returns the DefaultChannels field value if set, zero value otherwise.
func (o *FeedbackCustomizations) GetDefaultChannels() []FeedbackChannel {
	if o == nil || IsNil(o.DefaultChannels) {
		var ret []FeedbackChannel
		return ret
	}
	return o.DefaultChannels
}

// GetDefaultChannelsOk returns a tuple with the DefaultChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackCustomizations) GetDefaultChannelsOk() ([]FeedbackChannel, bool) {
	if o == nil || IsNil(o.DefaultChannels) {
		return nil, false
	}
	return o.DefaultChannels, true
}

// HasDefaultChannels returns a boolean if a field has been set.
func (o *FeedbackCustomizations) HasDefaultChannels() bool {
	if o != nil && !IsNil(o.DefaultChannels) {
		return true
	}

	return false
}

// SetDefaultChannels gets a reference to the given []FeedbackChannel and assigns it to the DefaultChannels field.
func (o *FeedbackCustomizations) SetDefaultChannels(v []FeedbackChannel) {
	o.DefaultChannels = v
}

// GetFeatureChannels returns the FeatureChannels field value if set, zero value otherwise.
func (o *FeedbackCustomizations) GetFeatureChannels() map[string][]FeedbackChannel {
	if o == nil || IsNil(o.FeatureChannels) {
		var ret map[string][]FeedbackChannel
		return ret
	}
	return *o.FeatureChannels
}

// GetFeatureChannelsOk returns a tuple with the FeatureChannels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackCustomizations) GetFeatureChannelsOk() (*map[string][]FeedbackChannel, bool) {
	if o == nil || IsNil(o.FeatureChannels) {
		return nil, false
	}
	return o.FeatureChannels, true
}

// HasFeatureChannels returns a boolean if a field has been set.
func (o *FeedbackCustomizations) HasFeatureChannels() bool {
	if o != nil && !IsNil(o.FeatureChannels) {
		return true
	}

	return false
}

// SetFeatureChannels gets a reference to the given map[string][]FeedbackChannel and assigns it to the FeatureChannels field.
func (o *FeedbackCustomizations) SetFeatureChannels(v map[string][]FeedbackChannel) {
	o.FeatureChannels = &v
}

// GetDisclaimer returns the Disclaimer field value if set, zero value otherwise.
func (o *FeedbackCustomizations) GetDisclaimer() string {
	if o == nil || IsNil(o.Disclaimer) {
		var ret string
		return ret
	}
	return *o.Disclaimer
}

// GetDisclaimerOk returns a tuple with the Disclaimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackCustomizations) GetDisclaimerOk() (*string, bool) {
	if o == nil || IsNil(o.Disclaimer) {
		return nil, false
	}
	return o.Disclaimer, true
}

// HasDisclaimer returns a boolean if a field has been set.
func (o *FeedbackCustomizations) HasDisclaimer() bool {
	if o != nil && !IsNil(o.Disclaimer) {
		return true
	}

	return false
}

// SetDisclaimer gets a reference to the given string and assigns it to the Disclaimer field.
func (o *FeedbackCustomizations) SetDisclaimer(v string) {
	o.Disclaimer = &v
}

// GetCompanyPrivacyPolicyLink returns the CompanyPrivacyPolicyLink field value if set, zero value otherwise.
func (o *FeedbackCustomizations) GetCompanyPrivacyPolicyLink() string {
	if o == nil || IsNil(o.CompanyPrivacyPolicyLink) {
		var ret string
		return ret
	}
	return *o.CompanyPrivacyPolicyLink
}

// GetCompanyPrivacyPolicyLinkOk returns a tuple with the CompanyPrivacyPolicyLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackCustomizations) GetCompanyPrivacyPolicyLinkOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyPrivacyPolicyLink) {
		return nil, false
	}
	return o.CompanyPrivacyPolicyLink, true
}

// HasCompanyPrivacyPolicyLink returns a boolean if a field has been set.
func (o *FeedbackCustomizations) HasCompanyPrivacyPolicyLink() bool {
	if o != nil && !IsNil(o.CompanyPrivacyPolicyLink) {
		return true
	}

	return false
}

// SetCompanyPrivacyPolicyLink gets a reference to the given string and assigns it to the CompanyPrivacyPolicyLink field.
func (o *FeedbackCustomizations) SetCompanyPrivacyPolicyLink(v string) {
	o.CompanyPrivacyPolicyLink = &v
}

// GetSupportMessage returns the SupportMessage field value if set, zero value otherwise.
func (o *FeedbackCustomizations) GetSupportMessage() string {
	if o == nil || IsNil(o.SupportMessage) {
		var ret string
		return ret
	}
	return *o.SupportMessage
}

// GetSupportMessageOk returns a tuple with the SupportMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackCustomizations) GetSupportMessageOk() (*string, bool) {
	if o == nil || IsNil(o.SupportMessage) {
		return nil, false
	}
	return o.SupportMessage, true
}

// HasSupportMessage returns a boolean if a field has been set.
func (o *FeedbackCustomizations) HasSupportMessage() bool {
	if o != nil && !IsNil(o.SupportMessage) {
		return true
	}

	return false
}

// SetSupportMessage gets a reference to the given string and assigns it to the SupportMessage field.
func (o *FeedbackCustomizations) SetSupportMessage(v string) {
	o.SupportMessage = &v
}

// GetSupportLinkText returns the SupportLinkText field value if set, zero value otherwise.
func (o *FeedbackCustomizations) GetSupportLinkText() string {
	if o == nil || IsNil(o.SupportLinkText) {
		var ret string
		return ret
	}
	return *o.SupportLinkText
}

// GetSupportLinkTextOk returns a tuple with the SupportLinkText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackCustomizations) GetSupportLinkTextOk() (*string, bool) {
	if o == nil || IsNil(o.SupportLinkText) {
		return nil, false
	}
	return o.SupportLinkText, true
}

// HasSupportLinkText returns a boolean if a field has been set.
func (o *FeedbackCustomizations) HasSupportLinkText() bool {
	if o != nil && !IsNil(o.SupportLinkText) {
		return true
	}

	return false
}

// SetSupportLinkText gets a reference to the given string and assigns it to the SupportLinkText field.
func (o *FeedbackCustomizations) SetSupportLinkText(v string) {
	o.SupportLinkText = &v
}

// GetSupportLink returns the SupportLink field value if set, zero value otherwise.
func (o *FeedbackCustomizations) GetSupportLink() string {
	if o == nil || IsNil(o.SupportLink) {
		var ret string
		return ret
	}
	return *o.SupportLink
}

// GetSupportLinkOk returns a tuple with the SupportLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FeedbackCustomizations) GetSupportLinkOk() (*string, bool) {
	if o == nil || IsNil(o.SupportLink) {
		return nil, false
	}
	return o.SupportLink, true
}

// HasSupportLink returns a boolean if a field has been set.
func (o *FeedbackCustomizations) HasSupportLink() bool {
	if o != nil && !IsNil(o.SupportLink) {
		return true
	}

	return false
}

// SetSupportLink gets a reference to the given string and assigns it to the SupportLink field.
func (o *FeedbackCustomizations) SetSupportLink(v string) {
	o.SupportLink = &v
}

func (o FeedbackCustomizations) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FeedbackCustomizations) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultChannels) {
		toSerialize["defaultChannels"] = o.DefaultChannels
	}
	if !IsNil(o.FeatureChannels) {
		toSerialize["featureChannels"] = o.FeatureChannels
	}
	if !IsNil(o.Disclaimer) {
		toSerialize["disclaimer"] = o.Disclaimer
	}
	if !IsNil(o.CompanyPrivacyPolicyLink) {
		toSerialize["companyPrivacyPolicyLink"] = o.CompanyPrivacyPolicyLink
	}
	if !IsNil(o.SupportMessage) {
		toSerialize["supportMessage"] = o.SupportMessage
	}
	if !IsNil(o.SupportLinkText) {
		toSerialize["supportLinkText"] = o.SupportLinkText
	}
	if !IsNil(o.SupportLink) {
		toSerialize["supportLink"] = o.SupportLink
	}
	return toSerialize, nil
}

type NullableFeedbackCustomizations struct {
	value *FeedbackCustomizations
	isSet bool
}

func (v NullableFeedbackCustomizations) Get() *FeedbackCustomizations {
	return v.value
}

func (v *NullableFeedbackCustomizations) Set(val *FeedbackCustomizations) {
	v.value = val
	v.isSet = true
}

func (v NullableFeedbackCustomizations) IsSet() bool {
	return v.isSet
}

func (v *NullableFeedbackCustomizations) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeedbackCustomizations(val *FeedbackCustomizations) *NullableFeedbackCustomizations {
	return &NullableFeedbackCustomizations{value: val, isSet: true}
}

func (v NullableFeedbackCustomizations) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeedbackCustomizations) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


