/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the PublicConfigRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicConfigRequest{}

// PublicConfigRequest Will only send back publicly available config and will ignore other keys
type PublicConfigRequest struct {
	// A list of theme keys to include in the response.
	ThemeKeys []string `json:"themeKeys,omitempty"`
	// A list of boolean flag keys to include in the response.
	BoolKeys []string `json:"boolKeys,omitempty"`
}

// NewPublicConfigRequest instantiates a new PublicConfigRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicConfigRequest() *PublicConfigRequest {
	this := PublicConfigRequest{}
	return &this
}

// NewPublicConfigRequestWithDefaults instantiates a new PublicConfigRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicConfigRequestWithDefaults() *PublicConfigRequest {
	this := PublicConfigRequest{}
	return &this
}

// GetThemeKeys returns the ThemeKeys field value if set, zero value otherwise.
func (o *PublicConfigRequest) GetThemeKeys() []string {
	if o == nil || IsNil(o.ThemeKeys) {
		var ret []string
		return ret
	}
	return o.ThemeKeys
}

// GetThemeKeysOk returns a tuple with the ThemeKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicConfigRequest) GetThemeKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.ThemeKeys) {
		return nil, false
	}
	return o.ThemeKeys, true
}

// HasThemeKeys returns a boolean if a field has been set.
func (o *PublicConfigRequest) HasThemeKeys() bool {
	if o != nil && !IsNil(o.ThemeKeys) {
		return true
	}

	return false
}

// SetThemeKeys gets a reference to the given []string and assigns it to the ThemeKeys field.
func (o *PublicConfigRequest) SetThemeKeys(v []string) {
	o.ThemeKeys = v
}

// GetBoolKeys returns the BoolKeys field value if set, zero value otherwise.
func (o *PublicConfigRequest) GetBoolKeys() []string {
	if o == nil || IsNil(o.BoolKeys) {
		var ret []string
		return ret
	}
	return o.BoolKeys
}

// GetBoolKeysOk returns a tuple with the BoolKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicConfigRequest) GetBoolKeysOk() ([]string, bool) {
	if o == nil || IsNil(o.BoolKeys) {
		return nil, false
	}
	return o.BoolKeys, true
}

// HasBoolKeys returns a boolean if a field has been set.
func (o *PublicConfigRequest) HasBoolKeys() bool {
	if o != nil && !IsNil(o.BoolKeys) {
		return true
	}

	return false
}

// SetBoolKeys gets a reference to the given []string and assigns it to the BoolKeys field.
func (o *PublicConfigRequest) SetBoolKeys(v []string) {
	o.BoolKeys = v
}

func (o PublicConfigRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicConfigRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ThemeKeys) {
		toSerialize["themeKeys"] = o.ThemeKeys
	}
	if !IsNil(o.BoolKeys) {
		toSerialize["boolKeys"] = o.BoolKeys
	}
	return toSerialize, nil
}

type NullablePublicConfigRequest struct {
	value *PublicConfigRequest
	isSet bool
}

func (v NullablePublicConfigRequest) Get() *PublicConfigRequest {
	return v.value
}

func (v *NullablePublicConfigRequest) Set(val *PublicConfigRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicConfigRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicConfigRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicConfigRequest(val *PublicConfigRequest) *NullablePublicConfigRequest {
	return &NullablePublicConfigRequest{value: val, isSet: true}
}

func (v NullablePublicConfigRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicConfigRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


