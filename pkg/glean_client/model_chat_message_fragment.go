/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the ChatMessageFragment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatMessageFragment{}

// ChatMessageFragment One fragment of a message.
type ChatMessageFragment struct {
	// An array of entities in the work graph retrieved via a data request.
	StructuredResults []StructuredResult `json:"structuredResults,omitempty"`
	// An opaque token that represents this particular result in this particular query. To be used for /feedback reporting.
	TrackingToken *string `json:"trackingToken,omitempty"`
	Text *string `json:"text,omitempty"`
	QuerySuggestion *QuerySuggestion `json:"querySuggestion,omitempty"`
	WriteAction *WriteAction `json:"writeAction,omitempty"`
}

// NewChatMessageFragment instantiates a new ChatMessageFragment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatMessageFragment() *ChatMessageFragment {
	this := ChatMessageFragment{}
	return &this
}

// NewChatMessageFragmentWithDefaults instantiates a new ChatMessageFragment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatMessageFragmentWithDefaults() *ChatMessageFragment {
	this := ChatMessageFragment{}
	return &this
}

// GetStructuredResults returns the StructuredResults field value if set, zero value otherwise.
func (o *ChatMessageFragment) GetStructuredResults() []StructuredResult {
	if o == nil || IsNil(o.StructuredResults) {
		var ret []StructuredResult
		return ret
	}
	return o.StructuredResults
}

// GetStructuredResultsOk returns a tuple with the StructuredResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMessageFragment) GetStructuredResultsOk() ([]StructuredResult, bool) {
	if o == nil || IsNil(o.StructuredResults) {
		return nil, false
	}
	return o.StructuredResults, true
}

// HasStructuredResults returns a boolean if a field has been set.
func (o *ChatMessageFragment) HasStructuredResults() bool {
	if o != nil && !IsNil(o.StructuredResults) {
		return true
	}

	return false
}

// SetStructuredResults gets a reference to the given []StructuredResult and assigns it to the StructuredResults field.
func (o *ChatMessageFragment) SetStructuredResults(v []StructuredResult) {
	o.StructuredResults = v
}

// GetTrackingToken returns the TrackingToken field value if set, zero value otherwise.
func (o *ChatMessageFragment) GetTrackingToken() string {
	if o == nil || IsNil(o.TrackingToken) {
		var ret string
		return ret
	}
	return *o.TrackingToken
}

// GetTrackingTokenOk returns a tuple with the TrackingToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMessageFragment) GetTrackingTokenOk() (*string, bool) {
	if o == nil || IsNil(o.TrackingToken) {
		return nil, false
	}
	return o.TrackingToken, true
}

// HasTrackingToken returns a boolean if a field has been set.
func (o *ChatMessageFragment) HasTrackingToken() bool {
	if o != nil && !IsNil(o.TrackingToken) {
		return true
	}

	return false
}

// SetTrackingToken gets a reference to the given string and assigns it to the TrackingToken field.
func (o *ChatMessageFragment) SetTrackingToken(v string) {
	o.TrackingToken = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *ChatMessageFragment) GetText() string {
	if o == nil || IsNil(o.Text) {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMessageFragment) GetTextOk() (*string, bool) {
	if o == nil || IsNil(o.Text) {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *ChatMessageFragment) HasText() bool {
	if o != nil && !IsNil(o.Text) {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *ChatMessageFragment) SetText(v string) {
	o.Text = &v
}

// GetQuerySuggestion returns the QuerySuggestion field value if set, zero value otherwise.
func (o *ChatMessageFragment) GetQuerySuggestion() QuerySuggestion {
	if o == nil || IsNil(o.QuerySuggestion) {
		var ret QuerySuggestion
		return ret
	}
	return *o.QuerySuggestion
}

// GetQuerySuggestionOk returns a tuple with the QuerySuggestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMessageFragment) GetQuerySuggestionOk() (*QuerySuggestion, bool) {
	if o == nil || IsNil(o.QuerySuggestion) {
		return nil, false
	}
	return o.QuerySuggestion, true
}

// HasQuerySuggestion returns a boolean if a field has been set.
func (o *ChatMessageFragment) HasQuerySuggestion() bool {
	if o != nil && !IsNil(o.QuerySuggestion) {
		return true
	}

	return false
}

// SetQuerySuggestion gets a reference to the given QuerySuggestion and assigns it to the QuerySuggestion field.
func (o *ChatMessageFragment) SetQuerySuggestion(v QuerySuggestion) {
	o.QuerySuggestion = &v
}

// GetWriteAction returns the WriteAction field value if set, zero value otherwise.
func (o *ChatMessageFragment) GetWriteAction() WriteAction {
	if o == nil || IsNil(o.WriteAction) {
		var ret WriteAction
		return ret
	}
	return *o.WriteAction
}

// GetWriteActionOk returns a tuple with the WriteAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMessageFragment) GetWriteActionOk() (*WriteAction, bool) {
	if o == nil || IsNil(o.WriteAction) {
		return nil, false
	}
	return o.WriteAction, true
}

// HasWriteAction returns a boolean if a field has been set.
func (o *ChatMessageFragment) HasWriteAction() bool {
	if o != nil && !IsNil(o.WriteAction) {
		return true
	}

	return false
}

// SetWriteAction gets a reference to the given WriteAction and assigns it to the WriteAction field.
func (o *ChatMessageFragment) SetWriteAction(v WriteAction) {
	o.WriteAction = &v
}

func (o ChatMessageFragment) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatMessageFragment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StructuredResults) {
		toSerialize["structuredResults"] = o.StructuredResults
	}
	if !IsNil(o.TrackingToken) {
		toSerialize["trackingToken"] = o.TrackingToken
	}
	if !IsNil(o.Text) {
		toSerialize["text"] = o.Text
	}
	if !IsNil(o.QuerySuggestion) {
		toSerialize["querySuggestion"] = o.QuerySuggestion
	}
	if !IsNil(o.WriteAction) {
		toSerialize["writeAction"] = o.WriteAction
	}
	return toSerialize, nil
}

type NullableChatMessageFragment struct {
	value *ChatMessageFragment
	isSet bool
}

func (v NullableChatMessageFragment) Get() *ChatMessageFragment {
	return v.value
}

func (v *NullableChatMessageFragment) Set(val *ChatMessageFragment) {
	v.value = val
	v.isSet = true
}

func (v NullableChatMessageFragment) IsSet() bool {
	return v.isSet
}

func (v *NullableChatMessageFragment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatMessageFragment(val *ChatMessageFragment) *NullableChatMessageFragment {
	return &NullableChatMessageFragment{value: val, isSet: true}
}

func (v NullableChatMessageFragment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatMessageFragment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


