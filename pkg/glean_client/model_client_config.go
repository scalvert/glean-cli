/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the ClientConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ClientConfig{}

// ClientConfig Configuration settings for a specific client deployment that are not related to any particular datasource
type ClientConfig struct {
	Assistant *AssistantConfig `json:"assistant,omitempty"`
	Tools *ToolsConfig `json:"tools,omitempty"`
	Shortcuts *ShortcutsConfig `json:"shortcuts,omitempty"`
	// Known bad client versions that should force update themselves
	BadVersions []string `json:"badVersions,omitempty"`
	// Whether people celebrations is enabled or not for the instance
	FeedPeopleCelebrationsEnabled *bool `json:"feedPeopleCelebrationsEnabled,omitempty"`
	// Whether the suggested feed is enabled
	FeedSuggestedEnabled *bool `json:"feedSuggestedEnabled,omitempty"`
	// Whether the trending feed is enabled
	FeedTrendingEnabled *bool `json:"feedTrendingEnabled,omitempty"`
	// Whether the recents feed is enabled
	FeedRecentsEnabled *bool `json:"feedRecentsEnabled,omitempty"`
	// Whether the mentions feed is enabled
	FeedMentionsEnabled *bool `json:"feedMentionsEnabled,omitempty"`
	// Whether the GPT agent for Chat is enabled
	// Deprecated
	GptAgentEnabled *bool `json:"gptAgentEnabled,omitempty"`
	// Whether the chat history for Chat is enabled
	// Deprecated
	ChatHistoryEnabled *bool `json:"chatHistoryEnabled,omitempty"`
	// A map of {string, boolean} pairs representing flags that globally guard conditional features. Omitted flags mean the client should use its default state.
	BoolValues *map[string]bool `json:"boolValues,omitempty"`
	// A map of {string, integer} pairs for client consumption.
	IntegerValues *map[string]int32 `json:"integerValues,omitempty"`
	// The user-facing name of the company owning the deployment
	CompanyDisplayName *string `json:"companyDisplayName,omitempty"`
	// A markdown string to be displayed on the search results page. Useful for outlinks to help pages.
	CustomSerpMarkdown *string `json:"customSerpMarkdown,omitempty"`
	// A demonstrative query to show during new user onboarding
	OnboardingQuery *string `json:"onboardingQuery,omitempty"`
	// Determines whether the org chart link in the Directory panel is visible to all users.
	IsOrgChartLinkVisible *bool `json:"isOrgChartLinkVisible,omitempty"`
	// Determines whether the org chart is accessible to all users, regardless of link visibility. Org chart can be accessible even if the org chart link in Directory is not visible.
	IsOrgChartAccessible *bool `json:"isOrgChartAccessible,omitempty"`
	// Whether or not people data has been set up.
	IsPeopleSetup *bool `json:"isPeopleSetup,omitempty"`
	// Whether or not the deployment is in pilot mode.
	IsPilotMode *bool `json:"isPilotMode,omitempty"`
	// URL the company uses to access the web app
	WebAppUrl *string `json:"webAppUrl,omitempty"`
	UserOutreach *UserOutreachConfig `json:"userOutreach,omitempty"`
	// The URL to use for outbound links to Glean Search. Defaults to {webAppUrl}/search?q=%s.
	SearchLinkUrlTemplate *string `json:"searchLinkUrlTemplate,omitempty"`
	// The URL to use for outbound links to Glean Chat. Defaults to {webAppUrl}/chat.
	// Deprecated
	ChatLinkUrlTemplate *string `json:"chatLinkUrlTemplate,omitempty"`
	Themes *Themes `json:"themes,omitempty"`
	Brandings *ClientConfigBrandings `json:"brandings,omitempty"`
	// Describes how to format the web app greeting. Possible format options include \\%t - timely greeting \\%n - the user's first name
	GreetingFormat *string `json:"greetingFormat,omitempty"`
	// Label for the external link at the end of the Task card in order to guide user to the source.
	TaskSeeAllLabel *string `json:"taskSeeAllLabel,omitempty"`
	// Link used in conjunction with taskSeeAllLabel to redirect user to the task's source.
	TaskSeeAllLink *string `json:"taskSeeAllLink,omitempty"`
	// Company-wide custom prefix for Go Links.
	// Deprecated
	ShortcutsPrefix *string `json:"shortcutsPrefix,omitempty"`
	// SSO provider used by the company
	SsoCompanyProvider *string `json:"ssoCompanyProvider,omitempty"`
	FeedbackCustomizations *FeedbackCustomizations `json:"feedbackCustomizations,omitempty"`
}

// NewClientConfig instantiates a new ClientConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewClientConfig() *ClientConfig {
	this := ClientConfig{}
	return &this
}

// NewClientConfigWithDefaults instantiates a new ClientConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewClientConfigWithDefaults() *ClientConfig {
	this := ClientConfig{}
	return &this
}

// GetAssistant returns the Assistant field value if set, zero value otherwise.
func (o *ClientConfig) GetAssistant() AssistantConfig {
	if o == nil || IsNil(o.Assistant) {
		var ret AssistantConfig
		return ret
	}
	return *o.Assistant
}

// GetAssistantOk returns a tuple with the Assistant field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetAssistantOk() (*AssistantConfig, bool) {
	if o == nil || IsNil(o.Assistant) {
		return nil, false
	}
	return o.Assistant, true
}

// HasAssistant returns a boolean if a field has been set.
func (o *ClientConfig) HasAssistant() bool {
	if o != nil && !IsNil(o.Assistant) {
		return true
	}

	return false
}

// SetAssistant gets a reference to the given AssistantConfig and assigns it to the Assistant field.
func (o *ClientConfig) SetAssistant(v AssistantConfig) {
	o.Assistant = &v
}

// GetTools returns the Tools field value if set, zero value otherwise.
func (o *ClientConfig) GetTools() ToolsConfig {
	if o == nil || IsNil(o.Tools) {
		var ret ToolsConfig
		return ret
	}
	return *o.Tools
}

// GetToolsOk returns a tuple with the Tools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetToolsOk() (*ToolsConfig, bool) {
	if o == nil || IsNil(o.Tools) {
		return nil, false
	}
	return o.Tools, true
}

// HasTools returns a boolean if a field has been set.
func (o *ClientConfig) HasTools() bool {
	if o != nil && !IsNil(o.Tools) {
		return true
	}

	return false
}

// SetTools gets a reference to the given ToolsConfig and assigns it to the Tools field.
func (o *ClientConfig) SetTools(v ToolsConfig) {
	o.Tools = &v
}

// GetShortcuts returns the Shortcuts field value if set, zero value otherwise.
func (o *ClientConfig) GetShortcuts() ShortcutsConfig {
	if o == nil || IsNil(o.Shortcuts) {
		var ret ShortcutsConfig
		return ret
	}
	return *o.Shortcuts
}

// GetShortcutsOk returns a tuple with the Shortcuts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetShortcutsOk() (*ShortcutsConfig, bool) {
	if o == nil || IsNil(o.Shortcuts) {
		return nil, false
	}
	return o.Shortcuts, true
}

// HasShortcuts returns a boolean if a field has been set.
func (o *ClientConfig) HasShortcuts() bool {
	if o != nil && !IsNil(o.Shortcuts) {
		return true
	}

	return false
}

// SetShortcuts gets a reference to the given ShortcutsConfig and assigns it to the Shortcuts field.
func (o *ClientConfig) SetShortcuts(v ShortcutsConfig) {
	o.Shortcuts = &v
}

// GetBadVersions returns the BadVersions field value if set, zero value otherwise.
func (o *ClientConfig) GetBadVersions() []string {
	if o == nil || IsNil(o.BadVersions) {
		var ret []string
		return ret
	}
	return o.BadVersions
}

// GetBadVersionsOk returns a tuple with the BadVersions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetBadVersionsOk() ([]string, bool) {
	if o == nil || IsNil(o.BadVersions) {
		return nil, false
	}
	return o.BadVersions, true
}

// HasBadVersions returns a boolean if a field has been set.
func (o *ClientConfig) HasBadVersions() bool {
	if o != nil && !IsNil(o.BadVersions) {
		return true
	}

	return false
}

// SetBadVersions gets a reference to the given []string and assigns it to the BadVersions field.
func (o *ClientConfig) SetBadVersions(v []string) {
	o.BadVersions = v
}

// GetFeedPeopleCelebrationsEnabled returns the FeedPeopleCelebrationsEnabled field value if set, zero value otherwise.
func (o *ClientConfig) GetFeedPeopleCelebrationsEnabled() bool {
	if o == nil || IsNil(o.FeedPeopleCelebrationsEnabled) {
		var ret bool
		return ret
	}
	return *o.FeedPeopleCelebrationsEnabled
}

// GetFeedPeopleCelebrationsEnabledOk returns a tuple with the FeedPeopleCelebrationsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetFeedPeopleCelebrationsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FeedPeopleCelebrationsEnabled) {
		return nil, false
	}
	return o.FeedPeopleCelebrationsEnabled, true
}

// HasFeedPeopleCelebrationsEnabled returns a boolean if a field has been set.
func (o *ClientConfig) HasFeedPeopleCelebrationsEnabled() bool {
	if o != nil && !IsNil(o.FeedPeopleCelebrationsEnabled) {
		return true
	}

	return false
}

// SetFeedPeopleCelebrationsEnabled gets a reference to the given bool and assigns it to the FeedPeopleCelebrationsEnabled field.
func (o *ClientConfig) SetFeedPeopleCelebrationsEnabled(v bool) {
	o.FeedPeopleCelebrationsEnabled = &v
}

// GetFeedSuggestedEnabled returns the FeedSuggestedEnabled field value if set, zero value otherwise.
func (o *ClientConfig) GetFeedSuggestedEnabled() bool {
	if o == nil || IsNil(o.FeedSuggestedEnabled) {
		var ret bool
		return ret
	}
	return *o.FeedSuggestedEnabled
}

// GetFeedSuggestedEnabledOk returns a tuple with the FeedSuggestedEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetFeedSuggestedEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FeedSuggestedEnabled) {
		return nil, false
	}
	return o.FeedSuggestedEnabled, true
}

// HasFeedSuggestedEnabled returns a boolean if a field has been set.
func (o *ClientConfig) HasFeedSuggestedEnabled() bool {
	if o != nil && !IsNil(o.FeedSuggestedEnabled) {
		return true
	}

	return false
}

// SetFeedSuggestedEnabled gets a reference to the given bool and assigns it to the FeedSuggestedEnabled field.
func (o *ClientConfig) SetFeedSuggestedEnabled(v bool) {
	o.FeedSuggestedEnabled = &v
}

// GetFeedTrendingEnabled returns the FeedTrendingEnabled field value if set, zero value otherwise.
func (o *ClientConfig) GetFeedTrendingEnabled() bool {
	if o == nil || IsNil(o.FeedTrendingEnabled) {
		var ret bool
		return ret
	}
	return *o.FeedTrendingEnabled
}

// GetFeedTrendingEnabledOk returns a tuple with the FeedTrendingEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetFeedTrendingEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FeedTrendingEnabled) {
		return nil, false
	}
	return o.FeedTrendingEnabled, true
}

// HasFeedTrendingEnabled returns a boolean if a field has been set.
func (o *ClientConfig) HasFeedTrendingEnabled() bool {
	if o != nil && !IsNil(o.FeedTrendingEnabled) {
		return true
	}

	return false
}

// SetFeedTrendingEnabled gets a reference to the given bool and assigns it to the FeedTrendingEnabled field.
func (o *ClientConfig) SetFeedTrendingEnabled(v bool) {
	o.FeedTrendingEnabled = &v
}

// GetFeedRecentsEnabled returns the FeedRecentsEnabled field value if set, zero value otherwise.
func (o *ClientConfig) GetFeedRecentsEnabled() bool {
	if o == nil || IsNil(o.FeedRecentsEnabled) {
		var ret bool
		return ret
	}
	return *o.FeedRecentsEnabled
}

// GetFeedRecentsEnabledOk returns a tuple with the FeedRecentsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetFeedRecentsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FeedRecentsEnabled) {
		return nil, false
	}
	return o.FeedRecentsEnabled, true
}

// HasFeedRecentsEnabled returns a boolean if a field has been set.
func (o *ClientConfig) HasFeedRecentsEnabled() bool {
	if o != nil && !IsNil(o.FeedRecentsEnabled) {
		return true
	}

	return false
}

// SetFeedRecentsEnabled gets a reference to the given bool and assigns it to the FeedRecentsEnabled field.
func (o *ClientConfig) SetFeedRecentsEnabled(v bool) {
	o.FeedRecentsEnabled = &v
}

// GetFeedMentionsEnabled returns the FeedMentionsEnabled field value if set, zero value otherwise.
func (o *ClientConfig) GetFeedMentionsEnabled() bool {
	if o == nil || IsNil(o.FeedMentionsEnabled) {
		var ret bool
		return ret
	}
	return *o.FeedMentionsEnabled
}

// GetFeedMentionsEnabledOk returns a tuple with the FeedMentionsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetFeedMentionsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.FeedMentionsEnabled) {
		return nil, false
	}
	return o.FeedMentionsEnabled, true
}

// HasFeedMentionsEnabled returns a boolean if a field has been set.
func (o *ClientConfig) HasFeedMentionsEnabled() bool {
	if o != nil && !IsNil(o.FeedMentionsEnabled) {
		return true
	}

	return false
}

// SetFeedMentionsEnabled gets a reference to the given bool and assigns it to the FeedMentionsEnabled field.
func (o *ClientConfig) SetFeedMentionsEnabled(v bool) {
	o.FeedMentionsEnabled = &v
}

// GetGptAgentEnabled returns the GptAgentEnabled field value if set, zero value otherwise.
// Deprecated
func (o *ClientConfig) GetGptAgentEnabled() bool {
	if o == nil || IsNil(o.GptAgentEnabled) {
		var ret bool
		return ret
	}
	return *o.GptAgentEnabled
}

// GetGptAgentEnabledOk returns a tuple with the GptAgentEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ClientConfig) GetGptAgentEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.GptAgentEnabled) {
		return nil, false
	}
	return o.GptAgentEnabled, true
}

// HasGptAgentEnabled returns a boolean if a field has been set.
func (o *ClientConfig) HasGptAgentEnabled() bool {
	if o != nil && !IsNil(o.GptAgentEnabled) {
		return true
	}

	return false
}

// SetGptAgentEnabled gets a reference to the given bool and assigns it to the GptAgentEnabled field.
// Deprecated
func (o *ClientConfig) SetGptAgentEnabled(v bool) {
	o.GptAgentEnabled = &v
}

// GetChatHistoryEnabled returns the ChatHistoryEnabled field value if set, zero value otherwise.
// Deprecated
func (o *ClientConfig) GetChatHistoryEnabled() bool {
	if o == nil || IsNil(o.ChatHistoryEnabled) {
		var ret bool
		return ret
	}
	return *o.ChatHistoryEnabled
}

// GetChatHistoryEnabledOk returns a tuple with the ChatHistoryEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ClientConfig) GetChatHistoryEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ChatHistoryEnabled) {
		return nil, false
	}
	return o.ChatHistoryEnabled, true
}

// HasChatHistoryEnabled returns a boolean if a field has been set.
func (o *ClientConfig) HasChatHistoryEnabled() bool {
	if o != nil && !IsNil(o.ChatHistoryEnabled) {
		return true
	}

	return false
}

// SetChatHistoryEnabled gets a reference to the given bool and assigns it to the ChatHistoryEnabled field.
// Deprecated
func (o *ClientConfig) SetChatHistoryEnabled(v bool) {
	o.ChatHistoryEnabled = &v
}

// GetBoolValues returns the BoolValues field value if set, zero value otherwise.
func (o *ClientConfig) GetBoolValues() map[string]bool {
	if o == nil || IsNil(o.BoolValues) {
		var ret map[string]bool
		return ret
	}
	return *o.BoolValues
}

// GetBoolValuesOk returns a tuple with the BoolValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetBoolValuesOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.BoolValues) {
		return nil, false
	}
	return o.BoolValues, true
}

// HasBoolValues returns a boolean if a field has been set.
func (o *ClientConfig) HasBoolValues() bool {
	if o != nil && !IsNil(o.BoolValues) {
		return true
	}

	return false
}

// SetBoolValues gets a reference to the given map[string]bool and assigns it to the BoolValues field.
func (o *ClientConfig) SetBoolValues(v map[string]bool) {
	o.BoolValues = &v
}

// GetIntegerValues returns the IntegerValues field value if set, zero value otherwise.
func (o *ClientConfig) GetIntegerValues() map[string]int32 {
	if o == nil || IsNil(o.IntegerValues) {
		var ret map[string]int32
		return ret
	}
	return *o.IntegerValues
}

// GetIntegerValuesOk returns a tuple with the IntegerValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetIntegerValuesOk() (*map[string]int32, bool) {
	if o == nil || IsNil(o.IntegerValues) {
		return nil, false
	}
	return o.IntegerValues, true
}

// HasIntegerValues returns a boolean if a field has been set.
func (o *ClientConfig) HasIntegerValues() bool {
	if o != nil && !IsNil(o.IntegerValues) {
		return true
	}

	return false
}

// SetIntegerValues gets a reference to the given map[string]int32 and assigns it to the IntegerValues field.
func (o *ClientConfig) SetIntegerValues(v map[string]int32) {
	o.IntegerValues = &v
}

// GetCompanyDisplayName returns the CompanyDisplayName field value if set, zero value otherwise.
func (o *ClientConfig) GetCompanyDisplayName() string {
	if o == nil || IsNil(o.CompanyDisplayName) {
		var ret string
		return ret
	}
	return *o.CompanyDisplayName
}

// GetCompanyDisplayNameOk returns a tuple with the CompanyDisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetCompanyDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyDisplayName) {
		return nil, false
	}
	return o.CompanyDisplayName, true
}

// HasCompanyDisplayName returns a boolean if a field has been set.
func (o *ClientConfig) HasCompanyDisplayName() bool {
	if o != nil && !IsNil(o.CompanyDisplayName) {
		return true
	}

	return false
}

// SetCompanyDisplayName gets a reference to the given string and assigns it to the CompanyDisplayName field.
func (o *ClientConfig) SetCompanyDisplayName(v string) {
	o.CompanyDisplayName = &v
}

// GetCustomSerpMarkdown returns the CustomSerpMarkdown field value if set, zero value otherwise.
func (o *ClientConfig) GetCustomSerpMarkdown() string {
	if o == nil || IsNil(o.CustomSerpMarkdown) {
		var ret string
		return ret
	}
	return *o.CustomSerpMarkdown
}

// GetCustomSerpMarkdownOk returns a tuple with the CustomSerpMarkdown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetCustomSerpMarkdownOk() (*string, bool) {
	if o == nil || IsNil(o.CustomSerpMarkdown) {
		return nil, false
	}
	return o.CustomSerpMarkdown, true
}

// HasCustomSerpMarkdown returns a boolean if a field has been set.
func (o *ClientConfig) HasCustomSerpMarkdown() bool {
	if o != nil && !IsNil(o.CustomSerpMarkdown) {
		return true
	}

	return false
}

// SetCustomSerpMarkdown gets a reference to the given string and assigns it to the CustomSerpMarkdown field.
func (o *ClientConfig) SetCustomSerpMarkdown(v string) {
	o.CustomSerpMarkdown = &v
}

// GetOnboardingQuery returns the OnboardingQuery field value if set, zero value otherwise.
func (o *ClientConfig) GetOnboardingQuery() string {
	if o == nil || IsNil(o.OnboardingQuery) {
		var ret string
		return ret
	}
	return *o.OnboardingQuery
}

// GetOnboardingQueryOk returns a tuple with the OnboardingQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetOnboardingQueryOk() (*string, bool) {
	if o == nil || IsNil(o.OnboardingQuery) {
		return nil, false
	}
	return o.OnboardingQuery, true
}

// HasOnboardingQuery returns a boolean if a field has been set.
func (o *ClientConfig) HasOnboardingQuery() bool {
	if o != nil && !IsNil(o.OnboardingQuery) {
		return true
	}

	return false
}

// SetOnboardingQuery gets a reference to the given string and assigns it to the OnboardingQuery field.
func (o *ClientConfig) SetOnboardingQuery(v string) {
	o.OnboardingQuery = &v
}

// GetIsOrgChartLinkVisible returns the IsOrgChartLinkVisible field value if set, zero value otherwise.
func (o *ClientConfig) GetIsOrgChartLinkVisible() bool {
	if o == nil || IsNil(o.IsOrgChartLinkVisible) {
		var ret bool
		return ret
	}
	return *o.IsOrgChartLinkVisible
}

// GetIsOrgChartLinkVisibleOk returns a tuple with the IsOrgChartLinkVisible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetIsOrgChartLinkVisibleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOrgChartLinkVisible) {
		return nil, false
	}
	return o.IsOrgChartLinkVisible, true
}

// HasIsOrgChartLinkVisible returns a boolean if a field has been set.
func (o *ClientConfig) HasIsOrgChartLinkVisible() bool {
	if o != nil && !IsNil(o.IsOrgChartLinkVisible) {
		return true
	}

	return false
}

// SetIsOrgChartLinkVisible gets a reference to the given bool and assigns it to the IsOrgChartLinkVisible field.
func (o *ClientConfig) SetIsOrgChartLinkVisible(v bool) {
	o.IsOrgChartLinkVisible = &v
}

// GetIsOrgChartAccessible returns the IsOrgChartAccessible field value if set, zero value otherwise.
func (o *ClientConfig) GetIsOrgChartAccessible() bool {
	if o == nil || IsNil(o.IsOrgChartAccessible) {
		var ret bool
		return ret
	}
	return *o.IsOrgChartAccessible
}

// GetIsOrgChartAccessibleOk returns a tuple with the IsOrgChartAccessible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetIsOrgChartAccessibleOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOrgChartAccessible) {
		return nil, false
	}
	return o.IsOrgChartAccessible, true
}

// HasIsOrgChartAccessible returns a boolean if a field has been set.
func (o *ClientConfig) HasIsOrgChartAccessible() bool {
	if o != nil && !IsNil(o.IsOrgChartAccessible) {
		return true
	}

	return false
}

// SetIsOrgChartAccessible gets a reference to the given bool and assigns it to the IsOrgChartAccessible field.
func (o *ClientConfig) SetIsOrgChartAccessible(v bool) {
	o.IsOrgChartAccessible = &v
}

// GetIsPeopleSetup returns the IsPeopleSetup field value if set, zero value otherwise.
func (o *ClientConfig) GetIsPeopleSetup() bool {
	if o == nil || IsNil(o.IsPeopleSetup) {
		var ret bool
		return ret
	}
	return *o.IsPeopleSetup
}

// GetIsPeopleSetupOk returns a tuple with the IsPeopleSetup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetIsPeopleSetupOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPeopleSetup) {
		return nil, false
	}
	return o.IsPeopleSetup, true
}

// HasIsPeopleSetup returns a boolean if a field has been set.
func (o *ClientConfig) HasIsPeopleSetup() bool {
	if o != nil && !IsNil(o.IsPeopleSetup) {
		return true
	}

	return false
}

// SetIsPeopleSetup gets a reference to the given bool and assigns it to the IsPeopleSetup field.
func (o *ClientConfig) SetIsPeopleSetup(v bool) {
	o.IsPeopleSetup = &v
}

// GetIsPilotMode returns the IsPilotMode field value if set, zero value otherwise.
func (o *ClientConfig) GetIsPilotMode() bool {
	if o == nil || IsNil(o.IsPilotMode) {
		var ret bool
		return ret
	}
	return *o.IsPilotMode
}

// GetIsPilotModeOk returns a tuple with the IsPilotMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetIsPilotModeOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPilotMode) {
		return nil, false
	}
	return o.IsPilotMode, true
}

// HasIsPilotMode returns a boolean if a field has been set.
func (o *ClientConfig) HasIsPilotMode() bool {
	if o != nil && !IsNil(o.IsPilotMode) {
		return true
	}

	return false
}

// SetIsPilotMode gets a reference to the given bool and assigns it to the IsPilotMode field.
func (o *ClientConfig) SetIsPilotMode(v bool) {
	o.IsPilotMode = &v
}

// GetWebAppUrl returns the WebAppUrl field value if set, zero value otherwise.
func (o *ClientConfig) GetWebAppUrl() string {
	if o == nil || IsNil(o.WebAppUrl) {
		var ret string
		return ret
	}
	return *o.WebAppUrl
}

// GetWebAppUrlOk returns a tuple with the WebAppUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetWebAppUrlOk() (*string, bool) {
	if o == nil || IsNil(o.WebAppUrl) {
		return nil, false
	}
	return o.WebAppUrl, true
}

// HasWebAppUrl returns a boolean if a field has been set.
func (o *ClientConfig) HasWebAppUrl() bool {
	if o != nil && !IsNil(o.WebAppUrl) {
		return true
	}

	return false
}

// SetWebAppUrl gets a reference to the given string and assigns it to the WebAppUrl field.
func (o *ClientConfig) SetWebAppUrl(v string) {
	o.WebAppUrl = &v
}

// GetUserOutreach returns the UserOutreach field value if set, zero value otherwise.
func (o *ClientConfig) GetUserOutreach() UserOutreachConfig {
	if o == nil || IsNil(o.UserOutreach) {
		var ret UserOutreachConfig
		return ret
	}
	return *o.UserOutreach
}

// GetUserOutreachOk returns a tuple with the UserOutreach field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetUserOutreachOk() (*UserOutreachConfig, bool) {
	if o == nil || IsNil(o.UserOutreach) {
		return nil, false
	}
	return o.UserOutreach, true
}

// HasUserOutreach returns a boolean if a field has been set.
func (o *ClientConfig) HasUserOutreach() bool {
	if o != nil && !IsNil(o.UserOutreach) {
		return true
	}

	return false
}

// SetUserOutreach gets a reference to the given UserOutreachConfig and assigns it to the UserOutreach field.
func (o *ClientConfig) SetUserOutreach(v UserOutreachConfig) {
	o.UserOutreach = &v
}

// GetSearchLinkUrlTemplate returns the SearchLinkUrlTemplate field value if set, zero value otherwise.
func (o *ClientConfig) GetSearchLinkUrlTemplate() string {
	if o == nil || IsNil(o.SearchLinkUrlTemplate) {
		var ret string
		return ret
	}
	return *o.SearchLinkUrlTemplate
}

// GetSearchLinkUrlTemplateOk returns a tuple with the SearchLinkUrlTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetSearchLinkUrlTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.SearchLinkUrlTemplate) {
		return nil, false
	}
	return o.SearchLinkUrlTemplate, true
}

// HasSearchLinkUrlTemplate returns a boolean if a field has been set.
func (o *ClientConfig) HasSearchLinkUrlTemplate() bool {
	if o != nil && !IsNil(o.SearchLinkUrlTemplate) {
		return true
	}

	return false
}

// SetSearchLinkUrlTemplate gets a reference to the given string and assigns it to the SearchLinkUrlTemplate field.
func (o *ClientConfig) SetSearchLinkUrlTemplate(v string) {
	o.SearchLinkUrlTemplate = &v
}

// GetChatLinkUrlTemplate returns the ChatLinkUrlTemplate field value if set, zero value otherwise.
// Deprecated
func (o *ClientConfig) GetChatLinkUrlTemplate() string {
	if o == nil || IsNil(o.ChatLinkUrlTemplate) {
		var ret string
		return ret
	}
	return *o.ChatLinkUrlTemplate
}

// GetChatLinkUrlTemplateOk returns a tuple with the ChatLinkUrlTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ClientConfig) GetChatLinkUrlTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.ChatLinkUrlTemplate) {
		return nil, false
	}
	return o.ChatLinkUrlTemplate, true
}

// HasChatLinkUrlTemplate returns a boolean if a field has been set.
func (o *ClientConfig) HasChatLinkUrlTemplate() bool {
	if o != nil && !IsNil(o.ChatLinkUrlTemplate) {
		return true
	}

	return false
}

// SetChatLinkUrlTemplate gets a reference to the given string and assigns it to the ChatLinkUrlTemplate field.
// Deprecated
func (o *ClientConfig) SetChatLinkUrlTemplate(v string) {
	o.ChatLinkUrlTemplate = &v
}

// GetThemes returns the Themes field value if set, zero value otherwise.
func (o *ClientConfig) GetThemes() Themes {
	if o == nil || IsNil(o.Themes) {
		var ret Themes
		return ret
	}
	return *o.Themes
}

// GetThemesOk returns a tuple with the Themes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetThemesOk() (*Themes, bool) {
	if o == nil || IsNil(o.Themes) {
		return nil, false
	}
	return o.Themes, true
}

// HasThemes returns a boolean if a field has been set.
func (o *ClientConfig) HasThemes() bool {
	if o != nil && !IsNil(o.Themes) {
		return true
	}

	return false
}

// SetThemes gets a reference to the given Themes and assigns it to the Themes field.
func (o *ClientConfig) SetThemes(v Themes) {
	o.Themes = &v
}

// GetBrandings returns the Brandings field value if set, zero value otherwise.
func (o *ClientConfig) GetBrandings() ClientConfigBrandings {
	if o == nil || IsNil(o.Brandings) {
		var ret ClientConfigBrandings
		return ret
	}
	return *o.Brandings
}

// GetBrandingsOk returns a tuple with the Brandings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetBrandingsOk() (*ClientConfigBrandings, bool) {
	if o == nil || IsNil(o.Brandings) {
		return nil, false
	}
	return o.Brandings, true
}

// HasBrandings returns a boolean if a field has been set.
func (o *ClientConfig) HasBrandings() bool {
	if o != nil && !IsNil(o.Brandings) {
		return true
	}

	return false
}

// SetBrandings gets a reference to the given ClientConfigBrandings and assigns it to the Brandings field.
func (o *ClientConfig) SetBrandings(v ClientConfigBrandings) {
	o.Brandings = &v
}

// GetGreetingFormat returns the GreetingFormat field value if set, zero value otherwise.
func (o *ClientConfig) GetGreetingFormat() string {
	if o == nil || IsNil(o.GreetingFormat) {
		var ret string
		return ret
	}
	return *o.GreetingFormat
}

// GetGreetingFormatOk returns a tuple with the GreetingFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetGreetingFormatOk() (*string, bool) {
	if o == nil || IsNil(o.GreetingFormat) {
		return nil, false
	}
	return o.GreetingFormat, true
}

// HasGreetingFormat returns a boolean if a field has been set.
func (o *ClientConfig) HasGreetingFormat() bool {
	if o != nil && !IsNil(o.GreetingFormat) {
		return true
	}

	return false
}

// SetGreetingFormat gets a reference to the given string and assigns it to the GreetingFormat field.
func (o *ClientConfig) SetGreetingFormat(v string) {
	o.GreetingFormat = &v
}

// GetTaskSeeAllLabel returns the TaskSeeAllLabel field value if set, zero value otherwise.
func (o *ClientConfig) GetTaskSeeAllLabel() string {
	if o == nil || IsNil(o.TaskSeeAllLabel) {
		var ret string
		return ret
	}
	return *o.TaskSeeAllLabel
}

// GetTaskSeeAllLabelOk returns a tuple with the TaskSeeAllLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetTaskSeeAllLabelOk() (*string, bool) {
	if o == nil || IsNil(o.TaskSeeAllLabel) {
		return nil, false
	}
	return o.TaskSeeAllLabel, true
}

// HasTaskSeeAllLabel returns a boolean if a field has been set.
func (o *ClientConfig) HasTaskSeeAllLabel() bool {
	if o != nil && !IsNil(o.TaskSeeAllLabel) {
		return true
	}

	return false
}

// SetTaskSeeAllLabel gets a reference to the given string and assigns it to the TaskSeeAllLabel field.
func (o *ClientConfig) SetTaskSeeAllLabel(v string) {
	o.TaskSeeAllLabel = &v
}

// GetTaskSeeAllLink returns the TaskSeeAllLink field value if set, zero value otherwise.
func (o *ClientConfig) GetTaskSeeAllLink() string {
	if o == nil || IsNil(o.TaskSeeAllLink) {
		var ret string
		return ret
	}
	return *o.TaskSeeAllLink
}

// GetTaskSeeAllLinkOk returns a tuple with the TaskSeeAllLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetTaskSeeAllLinkOk() (*string, bool) {
	if o == nil || IsNil(o.TaskSeeAllLink) {
		return nil, false
	}
	return o.TaskSeeAllLink, true
}

// HasTaskSeeAllLink returns a boolean if a field has been set.
func (o *ClientConfig) HasTaskSeeAllLink() bool {
	if o != nil && !IsNil(o.TaskSeeAllLink) {
		return true
	}

	return false
}

// SetTaskSeeAllLink gets a reference to the given string and assigns it to the TaskSeeAllLink field.
func (o *ClientConfig) SetTaskSeeAllLink(v string) {
	o.TaskSeeAllLink = &v
}

// GetShortcutsPrefix returns the ShortcutsPrefix field value if set, zero value otherwise.
// Deprecated
func (o *ClientConfig) GetShortcutsPrefix() string {
	if o == nil || IsNil(o.ShortcutsPrefix) {
		var ret string
		return ret
	}
	return *o.ShortcutsPrefix
}

// GetShortcutsPrefixOk returns a tuple with the ShortcutsPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ClientConfig) GetShortcutsPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.ShortcutsPrefix) {
		return nil, false
	}
	return o.ShortcutsPrefix, true
}

// HasShortcutsPrefix returns a boolean if a field has been set.
func (o *ClientConfig) HasShortcutsPrefix() bool {
	if o != nil && !IsNil(o.ShortcutsPrefix) {
		return true
	}

	return false
}

// SetShortcutsPrefix gets a reference to the given string and assigns it to the ShortcutsPrefix field.
// Deprecated
func (o *ClientConfig) SetShortcutsPrefix(v string) {
	o.ShortcutsPrefix = &v
}

// GetSsoCompanyProvider returns the SsoCompanyProvider field value if set, zero value otherwise.
func (o *ClientConfig) GetSsoCompanyProvider() string {
	if o == nil || IsNil(o.SsoCompanyProvider) {
		var ret string
		return ret
	}
	return *o.SsoCompanyProvider
}

// GetSsoCompanyProviderOk returns a tuple with the SsoCompanyProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetSsoCompanyProviderOk() (*string, bool) {
	if o == nil || IsNil(o.SsoCompanyProvider) {
		return nil, false
	}
	return o.SsoCompanyProvider, true
}

// HasSsoCompanyProvider returns a boolean if a field has been set.
func (o *ClientConfig) HasSsoCompanyProvider() bool {
	if o != nil && !IsNil(o.SsoCompanyProvider) {
		return true
	}

	return false
}

// SetSsoCompanyProvider gets a reference to the given string and assigns it to the SsoCompanyProvider field.
func (o *ClientConfig) SetSsoCompanyProvider(v string) {
	o.SsoCompanyProvider = &v
}

// GetFeedbackCustomizations returns the FeedbackCustomizations field value if set, zero value otherwise.
func (o *ClientConfig) GetFeedbackCustomizations() FeedbackCustomizations {
	if o == nil || IsNil(o.FeedbackCustomizations) {
		var ret FeedbackCustomizations
		return ret
	}
	return *o.FeedbackCustomizations
}

// GetFeedbackCustomizationsOk returns a tuple with the FeedbackCustomizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ClientConfig) GetFeedbackCustomizationsOk() (*FeedbackCustomizations, bool) {
	if o == nil || IsNil(o.FeedbackCustomizations) {
		return nil, false
	}
	return o.FeedbackCustomizations, true
}

// HasFeedbackCustomizations returns a boolean if a field has been set.
func (o *ClientConfig) HasFeedbackCustomizations() bool {
	if o != nil && !IsNil(o.FeedbackCustomizations) {
		return true
	}

	return false
}

// SetFeedbackCustomizations gets a reference to the given FeedbackCustomizations and assigns it to the FeedbackCustomizations field.
func (o *ClientConfig) SetFeedbackCustomizations(v FeedbackCustomizations) {
	o.FeedbackCustomizations = &v
}

func (o ClientConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ClientConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Assistant) {
		toSerialize["assistant"] = o.Assistant
	}
	if !IsNil(o.Tools) {
		toSerialize["tools"] = o.Tools
	}
	if !IsNil(o.Shortcuts) {
		toSerialize["shortcuts"] = o.Shortcuts
	}
	if !IsNil(o.BadVersions) {
		toSerialize["badVersions"] = o.BadVersions
	}
	if !IsNil(o.FeedPeopleCelebrationsEnabled) {
		toSerialize["feedPeopleCelebrationsEnabled"] = o.FeedPeopleCelebrationsEnabled
	}
	if !IsNil(o.FeedSuggestedEnabled) {
		toSerialize["feedSuggestedEnabled"] = o.FeedSuggestedEnabled
	}
	if !IsNil(o.FeedTrendingEnabled) {
		toSerialize["feedTrendingEnabled"] = o.FeedTrendingEnabled
	}
	if !IsNil(o.FeedRecentsEnabled) {
		toSerialize["feedRecentsEnabled"] = o.FeedRecentsEnabled
	}
	if !IsNil(o.FeedMentionsEnabled) {
		toSerialize["feedMentionsEnabled"] = o.FeedMentionsEnabled
	}
	if !IsNil(o.GptAgentEnabled) {
		toSerialize["gptAgentEnabled"] = o.GptAgentEnabled
	}
	if !IsNil(o.ChatHistoryEnabled) {
		toSerialize["chatHistoryEnabled"] = o.ChatHistoryEnabled
	}
	if !IsNil(o.BoolValues) {
		toSerialize["boolValues"] = o.BoolValues
	}
	if !IsNil(o.IntegerValues) {
		toSerialize["integerValues"] = o.IntegerValues
	}
	if !IsNil(o.CompanyDisplayName) {
		toSerialize["companyDisplayName"] = o.CompanyDisplayName
	}
	if !IsNil(o.CustomSerpMarkdown) {
		toSerialize["customSerpMarkdown"] = o.CustomSerpMarkdown
	}
	if !IsNil(o.OnboardingQuery) {
		toSerialize["onboardingQuery"] = o.OnboardingQuery
	}
	if !IsNil(o.IsOrgChartLinkVisible) {
		toSerialize["isOrgChartLinkVisible"] = o.IsOrgChartLinkVisible
	}
	if !IsNil(o.IsOrgChartAccessible) {
		toSerialize["isOrgChartAccessible"] = o.IsOrgChartAccessible
	}
	if !IsNil(o.IsPeopleSetup) {
		toSerialize["isPeopleSetup"] = o.IsPeopleSetup
	}
	if !IsNil(o.IsPilotMode) {
		toSerialize["isPilotMode"] = o.IsPilotMode
	}
	if !IsNil(o.WebAppUrl) {
		toSerialize["webAppUrl"] = o.WebAppUrl
	}
	if !IsNil(o.UserOutreach) {
		toSerialize["userOutreach"] = o.UserOutreach
	}
	if !IsNil(o.SearchLinkUrlTemplate) {
		toSerialize["searchLinkUrlTemplate"] = o.SearchLinkUrlTemplate
	}
	if !IsNil(o.ChatLinkUrlTemplate) {
		toSerialize["chatLinkUrlTemplate"] = o.ChatLinkUrlTemplate
	}
	if !IsNil(o.Themes) {
		toSerialize["themes"] = o.Themes
	}
	if !IsNil(o.Brandings) {
		toSerialize["brandings"] = o.Brandings
	}
	if !IsNil(o.GreetingFormat) {
		toSerialize["greetingFormat"] = o.GreetingFormat
	}
	if !IsNil(o.TaskSeeAllLabel) {
		toSerialize["taskSeeAllLabel"] = o.TaskSeeAllLabel
	}
	if !IsNil(o.TaskSeeAllLink) {
		toSerialize["taskSeeAllLink"] = o.TaskSeeAllLink
	}
	if !IsNil(o.ShortcutsPrefix) {
		toSerialize["shortcutsPrefix"] = o.ShortcutsPrefix
	}
	if !IsNil(o.SsoCompanyProvider) {
		toSerialize["ssoCompanyProvider"] = o.SsoCompanyProvider
	}
	if !IsNil(o.FeedbackCustomizations) {
		toSerialize["feedbackCustomizations"] = o.FeedbackCustomizations
	}
	return toSerialize, nil
}

type NullableClientConfig struct {
	value *ClientConfig
	isSet bool
}

func (v NullableClientConfig) Get() *ClientConfig {
	return v.value
}

func (v *NullableClientConfig) Set(val *ClientConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableClientConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableClientConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableClientConfig(val *ClientConfig) *NullableClientConfig {
	return &NullableClientConfig{value: val, isSet: true}
}

func (v NullableClientConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableClientConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


