/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the InviteRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InviteRequest{}

// InviteRequest A request to send an invite to the specified user[s]
type InviteRequest struct {
	Channel *CommunicationChannel `json:"channel,omitempty"`
	Template *CommunicationTemplate `json:"template,omitempty"`
	// The people who should receive this invite
	Recipients []Person `json:"recipients,omitempty"`
	RecipientFilters *PeopleFilters `json:"recipientFilters,omitempty"`
}

// NewInviteRequest instantiates a new InviteRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteRequest() *InviteRequest {
	this := InviteRequest{}
	return &this
}

// NewInviteRequestWithDefaults instantiates a new InviteRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteRequestWithDefaults() *InviteRequest {
	this := InviteRequest{}
	return &this
}

// GetChannel returns the Channel field value if set, zero value otherwise.
func (o *InviteRequest) GetChannel() CommunicationChannel {
	if o == nil || IsNil(o.Channel) {
		var ret CommunicationChannel
		return ret
	}
	return *o.Channel
}

// GetChannelOk returns a tuple with the Channel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteRequest) GetChannelOk() (*CommunicationChannel, bool) {
	if o == nil || IsNil(o.Channel) {
		return nil, false
	}
	return o.Channel, true
}

// HasChannel returns a boolean if a field has been set.
func (o *InviteRequest) HasChannel() bool {
	if o != nil && !IsNil(o.Channel) {
		return true
	}

	return false
}

// SetChannel gets a reference to the given CommunicationChannel and assigns it to the Channel field.
func (o *InviteRequest) SetChannel(v CommunicationChannel) {
	o.Channel = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *InviteRequest) GetTemplate() CommunicationTemplate {
	if o == nil || IsNil(o.Template) {
		var ret CommunicationTemplate
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteRequest) GetTemplateOk() (*CommunicationTemplate, bool) {
	if o == nil || IsNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *InviteRequest) HasTemplate() bool {
	if o != nil && !IsNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given CommunicationTemplate and assigns it to the Template field.
func (o *InviteRequest) SetTemplate(v CommunicationTemplate) {
	o.Template = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *InviteRequest) GetRecipients() []Person {
	if o == nil || IsNil(o.Recipients) {
		var ret []Person
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteRequest) GetRecipientsOk() ([]Person, bool) {
	if o == nil || IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *InviteRequest) HasRecipients() bool {
	if o != nil && !IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []Person and assigns it to the Recipients field.
func (o *InviteRequest) SetRecipients(v []Person) {
	o.Recipients = v
}

// GetRecipientFilters returns the RecipientFilters field value if set, zero value otherwise.
func (o *InviteRequest) GetRecipientFilters() PeopleFilters {
	if o == nil || IsNil(o.RecipientFilters) {
		var ret PeopleFilters
		return ret
	}
	return *o.RecipientFilters
}

// GetRecipientFiltersOk returns a tuple with the RecipientFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteRequest) GetRecipientFiltersOk() (*PeopleFilters, bool) {
	if o == nil || IsNil(o.RecipientFilters) {
		return nil, false
	}
	return o.RecipientFilters, true
}

// HasRecipientFilters returns a boolean if a field has been set.
func (o *InviteRequest) HasRecipientFilters() bool {
	if o != nil && !IsNil(o.RecipientFilters) {
		return true
	}

	return false
}

// SetRecipientFilters gets a reference to the given PeopleFilters and assigns it to the RecipientFilters field.
func (o *InviteRequest) SetRecipientFilters(v PeopleFilters) {
	o.RecipientFilters = &v
}

func (o InviteRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InviteRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Channel) {
		toSerialize["channel"] = o.Channel
	}
	if !IsNil(o.Template) {
		toSerialize["template"] = o.Template
	}
	if !IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	if !IsNil(o.RecipientFilters) {
		toSerialize["recipientFilters"] = o.RecipientFilters
	}
	return toSerialize, nil
}

type NullableInviteRequest struct {
	value *InviteRequest
	isSet bool
}

func (v NullableInviteRequest) Get() *InviteRequest {
	return v.value
}

func (v *NullableInviteRequest) Set(val *InviteRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteRequest(val *InviteRequest) *NullableInviteRequest {
	return &NullableInviteRequest{value: val, isSet: true}
}

func (v NullableInviteRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


