/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the AddCredentialRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCredentialRequest{}

// AddCredentialRequest struct for AddCredentialRequest
type AddCredentialRequest struct {
	// the datasource the credential applies to
	Datasource *string `json:"datasource,omitempty"`
	// the datasource instance the credential applies to
	DatasourceInstance *string `json:"datasourceInstance,omitempty"`
	// the user info (email or username for example) for the credential
	User *string `json:"user,omitempty"`
	// the token part of the credential (password, apiToken etc)
	Token *string `json:"token,omitempty"`
	// any metadata associated with the user credential
	Metadata *string `json:"metadata,omitempty"`
}

// NewAddCredentialRequest instantiates a new AddCredentialRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCredentialRequest() *AddCredentialRequest {
	this := AddCredentialRequest{}
	return &this
}

// NewAddCredentialRequestWithDefaults instantiates a new AddCredentialRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCredentialRequestWithDefaults() *AddCredentialRequest {
	this := AddCredentialRequest{}
	return &this
}

// GetDatasource returns the Datasource field value if set, zero value otherwise.
func (o *AddCredentialRequest) GetDatasource() string {
	if o == nil || IsNil(o.Datasource) {
		var ret string
		return ret
	}
	return *o.Datasource
}

// GetDatasourceOk returns a tuple with the Datasource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentialRequest) GetDatasourceOk() (*string, bool) {
	if o == nil || IsNil(o.Datasource) {
		return nil, false
	}
	return o.Datasource, true
}

// HasDatasource returns a boolean if a field has been set.
func (o *AddCredentialRequest) HasDatasource() bool {
	if o != nil && !IsNil(o.Datasource) {
		return true
	}

	return false
}

// SetDatasource gets a reference to the given string and assigns it to the Datasource field.
func (o *AddCredentialRequest) SetDatasource(v string) {
	o.Datasource = &v
}

// GetDatasourceInstance returns the DatasourceInstance field value if set, zero value otherwise.
func (o *AddCredentialRequest) GetDatasourceInstance() string {
	if o == nil || IsNil(o.DatasourceInstance) {
		var ret string
		return ret
	}
	return *o.DatasourceInstance
}

// GetDatasourceInstanceOk returns a tuple with the DatasourceInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentialRequest) GetDatasourceInstanceOk() (*string, bool) {
	if o == nil || IsNil(o.DatasourceInstance) {
		return nil, false
	}
	return o.DatasourceInstance, true
}

// HasDatasourceInstance returns a boolean if a field has been set.
func (o *AddCredentialRequest) HasDatasourceInstance() bool {
	if o != nil && !IsNil(o.DatasourceInstance) {
		return true
	}

	return false
}

// SetDatasourceInstance gets a reference to the given string and assigns it to the DatasourceInstance field.
func (o *AddCredentialRequest) SetDatasourceInstance(v string) {
	o.DatasourceInstance = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AddCredentialRequest) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentialRequest) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AddCredentialRequest) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *AddCredentialRequest) SetUser(v string) {
	o.User = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *AddCredentialRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentialRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *AddCredentialRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *AddCredentialRequest) SetToken(v string) {
	o.Token = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *AddCredentialRequest) GetMetadata() string {
	if o == nil || IsNil(o.Metadata) {
		var ret string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCredentialRequest) GetMetadataOk() (*string, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *AddCredentialRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given string and assigns it to the Metadata field.
func (o *AddCredentialRequest) SetMetadata(v string) {
	o.Metadata = &v
}

func (o AddCredentialRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCredentialRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Datasource) {
		toSerialize["datasource"] = o.Datasource
	}
	if !IsNil(o.DatasourceInstance) {
		toSerialize["datasourceInstance"] = o.DatasourceInstance
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableAddCredentialRequest struct {
	value *AddCredentialRequest
	isSet bool
}

func (v NullableAddCredentialRequest) Get() *AddCredentialRequest {
	return v.value
}

func (v *NullableAddCredentialRequest) Set(val *AddCredentialRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCredentialRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCredentialRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCredentialRequest(val *AddCredentialRequest) *NullableAddCredentialRequest {
	return &NullableAddCredentialRequest{value: val, isSet: true}
}

func (v NullableAddCredentialRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCredentialRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


