/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the GetDraftAnnouncementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetDraftAnnouncementResponse{}

// GetDraftAnnouncementResponse struct for GetDraftAnnouncementResponse
type GetDraftAnnouncementResponse struct {
	Announcement *Announcement `json:"announcement,omitempty"`
	Error *AnnouncementError `json:"error,omitempty"`
}

// NewGetDraftAnnouncementResponse instantiates a new GetDraftAnnouncementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDraftAnnouncementResponse() *GetDraftAnnouncementResponse {
	this := GetDraftAnnouncementResponse{}
	return &this
}

// NewGetDraftAnnouncementResponseWithDefaults instantiates a new GetDraftAnnouncementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDraftAnnouncementResponseWithDefaults() *GetDraftAnnouncementResponse {
	this := GetDraftAnnouncementResponse{}
	return &this
}

// GetAnnouncement returns the Announcement field value if set, zero value otherwise.
func (o *GetDraftAnnouncementResponse) GetAnnouncement() Announcement {
	if o == nil || IsNil(o.Announcement) {
		var ret Announcement
		return ret
	}
	return *o.Announcement
}

// GetAnnouncementOk returns a tuple with the Announcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDraftAnnouncementResponse) GetAnnouncementOk() (*Announcement, bool) {
	if o == nil || IsNil(o.Announcement) {
		return nil, false
	}
	return o.Announcement, true
}

// HasAnnouncement returns a boolean if a field has been set.
func (o *GetDraftAnnouncementResponse) HasAnnouncement() bool {
	if o != nil && !IsNil(o.Announcement) {
		return true
	}

	return false
}

// SetAnnouncement gets a reference to the given Announcement and assigns it to the Announcement field.
func (o *GetDraftAnnouncementResponse) SetAnnouncement(v Announcement) {
	o.Announcement = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *GetDraftAnnouncementResponse) GetError() AnnouncementError {
	if o == nil || IsNil(o.Error) {
		var ret AnnouncementError
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDraftAnnouncementResponse) GetErrorOk() (*AnnouncementError, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *GetDraftAnnouncementResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given AnnouncementError and assigns it to the Error field.
func (o *GetDraftAnnouncementResponse) SetError(v AnnouncementError) {
	o.Error = &v
}

func (o GetDraftAnnouncementResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetDraftAnnouncementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Announcement) {
		toSerialize["announcement"] = o.Announcement
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableGetDraftAnnouncementResponse struct {
	value *GetDraftAnnouncementResponse
	isSet bool
}

func (v NullableGetDraftAnnouncementResponse) Get() *GetDraftAnnouncementResponse {
	return v.value
}

func (v *NullableGetDraftAnnouncementResponse) Set(val *GetDraftAnnouncementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDraftAnnouncementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDraftAnnouncementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDraftAnnouncementResponse(val *GetDraftAnnouncementResponse) *NullableGetDraftAnnouncementResponse {
	return &NullableGetDraftAnnouncementResponse{value: val, isSet: true}
}

func (v NullableGetDraftAnnouncementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDraftAnnouncementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


