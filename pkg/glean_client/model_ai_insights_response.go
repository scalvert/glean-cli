/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
)

// checks if the AiInsightsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AiInsightsResponse{}

// AiInsightsResponse struct for AiInsightsResponse
type AiInsightsResponse struct {
	// Unix timestamp of the last activity processed to make the response (in seconds since epoch UTC).
	LastLogTimestamp *int32 `json:"lastLogTimestamp,omitempty"`
	AssistantInsights []UserActivityInsight `json:"assistantInsights,omitempty"`
	// Total number of Active Assistant users (chat, summary, AIA) in requested period.
	TotalActiveAssistantUsers *int32 `json:"totalActiveAssistantUsers,omitempty"`
	// Total number of Chat messages sent in requested period.
	TotalChatMessages *int32 `json:"totalChatMessages,omitempty"`
	// Total number of AI Document Summarizations invoked in the requested period.
	TotalAiSummarizations *int32 `json:"totalAiSummarizations,omitempty"`
	// Total number of AI Answers generated in the requested period.
	TotalAiAnswers *int32 `json:"totalAiAnswers,omitempty"`
	// Total number of Chat messages which received upvotes by the user.
	TotalUpvotes *int32 `json:"totalUpvotes,omitempty"`
	// Total number of Chat messages which received downvotes by the user.
	TotalDownvotes *int32 `json:"totalDownvotes,omitempty"`
	// Total number of Gleanbot responses, both proactive and reactive.
	TotalGleanbotResponses *int32 `json:"totalGleanbotResponses,omitempty"`
	// Total number of Gleanbot responses shared publicly (upvoted).
	TotalGleanbotResponsesShared *int32 `json:"totalGleanbotResponsesShared,omitempty"`
	// Total number of Glean responses rejected as not helpful (downvoted).
	TotalGleanbotResponsesNotHelpful *int32 `json:"totalGleanbotResponsesNotHelpful,omitempty"`
	// list of departments applicable for users tab.
	Departments []string `json:"departments,omitempty"`
}

// NewAiInsightsResponse instantiates a new AiInsightsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAiInsightsResponse() *AiInsightsResponse {
	this := AiInsightsResponse{}
	return &this
}

// NewAiInsightsResponseWithDefaults instantiates a new AiInsightsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAiInsightsResponseWithDefaults() *AiInsightsResponse {
	this := AiInsightsResponse{}
	return &this
}

// GetLastLogTimestamp returns the LastLogTimestamp field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetLastLogTimestamp() int32 {
	if o == nil || IsNil(o.LastLogTimestamp) {
		var ret int32
		return ret
	}
	return *o.LastLogTimestamp
}

// GetLastLogTimestampOk returns a tuple with the LastLogTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetLastLogTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.LastLogTimestamp) {
		return nil, false
	}
	return o.LastLogTimestamp, true
}

// HasLastLogTimestamp returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasLastLogTimestamp() bool {
	if o != nil && !IsNil(o.LastLogTimestamp) {
		return true
	}

	return false
}

// SetLastLogTimestamp gets a reference to the given int32 and assigns it to the LastLogTimestamp field.
func (o *AiInsightsResponse) SetLastLogTimestamp(v int32) {
	o.LastLogTimestamp = &v
}

// GetAssistantInsights returns the AssistantInsights field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetAssistantInsights() []UserActivityInsight {
	if o == nil || IsNil(o.AssistantInsights) {
		var ret []UserActivityInsight
		return ret
	}
	return o.AssistantInsights
}

// GetAssistantInsightsOk returns a tuple with the AssistantInsights field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetAssistantInsightsOk() ([]UserActivityInsight, bool) {
	if o == nil || IsNil(o.AssistantInsights) {
		return nil, false
	}
	return o.AssistantInsights, true
}

// HasAssistantInsights returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasAssistantInsights() bool {
	if o != nil && !IsNil(o.AssistantInsights) {
		return true
	}

	return false
}

// SetAssistantInsights gets a reference to the given []UserActivityInsight and assigns it to the AssistantInsights field.
func (o *AiInsightsResponse) SetAssistantInsights(v []UserActivityInsight) {
	o.AssistantInsights = v
}

// GetTotalActiveAssistantUsers returns the TotalActiveAssistantUsers field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetTotalActiveAssistantUsers() int32 {
	if o == nil || IsNil(o.TotalActiveAssistantUsers) {
		var ret int32
		return ret
	}
	return *o.TotalActiveAssistantUsers
}

// GetTotalActiveAssistantUsersOk returns a tuple with the TotalActiveAssistantUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetTotalActiveAssistantUsersOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalActiveAssistantUsers) {
		return nil, false
	}
	return o.TotalActiveAssistantUsers, true
}

// HasTotalActiveAssistantUsers returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasTotalActiveAssistantUsers() bool {
	if o != nil && !IsNil(o.TotalActiveAssistantUsers) {
		return true
	}

	return false
}

// SetTotalActiveAssistantUsers gets a reference to the given int32 and assigns it to the TotalActiveAssistantUsers field.
func (o *AiInsightsResponse) SetTotalActiveAssistantUsers(v int32) {
	o.TotalActiveAssistantUsers = &v
}

// GetTotalChatMessages returns the TotalChatMessages field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetTotalChatMessages() int32 {
	if o == nil || IsNil(o.TotalChatMessages) {
		var ret int32
		return ret
	}
	return *o.TotalChatMessages
}

// GetTotalChatMessagesOk returns a tuple with the TotalChatMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetTotalChatMessagesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalChatMessages) {
		return nil, false
	}
	return o.TotalChatMessages, true
}

// HasTotalChatMessages returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasTotalChatMessages() bool {
	if o != nil && !IsNil(o.TotalChatMessages) {
		return true
	}

	return false
}

// SetTotalChatMessages gets a reference to the given int32 and assigns it to the TotalChatMessages field.
func (o *AiInsightsResponse) SetTotalChatMessages(v int32) {
	o.TotalChatMessages = &v
}

// GetTotalAiSummarizations returns the TotalAiSummarizations field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetTotalAiSummarizations() int32 {
	if o == nil || IsNil(o.TotalAiSummarizations) {
		var ret int32
		return ret
	}
	return *o.TotalAiSummarizations
}

// GetTotalAiSummarizationsOk returns a tuple with the TotalAiSummarizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetTotalAiSummarizationsOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalAiSummarizations) {
		return nil, false
	}
	return o.TotalAiSummarizations, true
}

// HasTotalAiSummarizations returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasTotalAiSummarizations() bool {
	if o != nil && !IsNil(o.TotalAiSummarizations) {
		return true
	}

	return false
}

// SetTotalAiSummarizations gets a reference to the given int32 and assigns it to the TotalAiSummarizations field.
func (o *AiInsightsResponse) SetTotalAiSummarizations(v int32) {
	o.TotalAiSummarizations = &v
}

// GetTotalAiAnswers returns the TotalAiAnswers field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetTotalAiAnswers() int32 {
	if o == nil || IsNil(o.TotalAiAnswers) {
		var ret int32
		return ret
	}
	return *o.TotalAiAnswers
}

// GetTotalAiAnswersOk returns a tuple with the TotalAiAnswers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetTotalAiAnswersOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalAiAnswers) {
		return nil, false
	}
	return o.TotalAiAnswers, true
}

// HasTotalAiAnswers returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasTotalAiAnswers() bool {
	if o != nil && !IsNil(o.TotalAiAnswers) {
		return true
	}

	return false
}

// SetTotalAiAnswers gets a reference to the given int32 and assigns it to the TotalAiAnswers field.
func (o *AiInsightsResponse) SetTotalAiAnswers(v int32) {
	o.TotalAiAnswers = &v
}

// GetTotalUpvotes returns the TotalUpvotes field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetTotalUpvotes() int32 {
	if o == nil || IsNil(o.TotalUpvotes) {
		var ret int32
		return ret
	}
	return *o.TotalUpvotes
}

// GetTotalUpvotesOk returns a tuple with the TotalUpvotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetTotalUpvotesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalUpvotes) {
		return nil, false
	}
	return o.TotalUpvotes, true
}

// HasTotalUpvotes returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasTotalUpvotes() bool {
	if o != nil && !IsNil(o.TotalUpvotes) {
		return true
	}

	return false
}

// SetTotalUpvotes gets a reference to the given int32 and assigns it to the TotalUpvotes field.
func (o *AiInsightsResponse) SetTotalUpvotes(v int32) {
	o.TotalUpvotes = &v
}

// GetTotalDownvotes returns the TotalDownvotes field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetTotalDownvotes() int32 {
	if o == nil || IsNil(o.TotalDownvotes) {
		var ret int32
		return ret
	}
	return *o.TotalDownvotes
}

// GetTotalDownvotesOk returns a tuple with the TotalDownvotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetTotalDownvotesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalDownvotes) {
		return nil, false
	}
	return o.TotalDownvotes, true
}

// HasTotalDownvotes returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasTotalDownvotes() bool {
	if o != nil && !IsNil(o.TotalDownvotes) {
		return true
	}

	return false
}

// SetTotalDownvotes gets a reference to the given int32 and assigns it to the TotalDownvotes field.
func (o *AiInsightsResponse) SetTotalDownvotes(v int32) {
	o.TotalDownvotes = &v
}

// GetTotalGleanbotResponses returns the TotalGleanbotResponses field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetTotalGleanbotResponses() int32 {
	if o == nil || IsNil(o.TotalGleanbotResponses) {
		var ret int32
		return ret
	}
	return *o.TotalGleanbotResponses
}

// GetTotalGleanbotResponsesOk returns a tuple with the TotalGleanbotResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetTotalGleanbotResponsesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalGleanbotResponses) {
		return nil, false
	}
	return o.TotalGleanbotResponses, true
}

// HasTotalGleanbotResponses returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasTotalGleanbotResponses() bool {
	if o != nil && !IsNil(o.TotalGleanbotResponses) {
		return true
	}

	return false
}

// SetTotalGleanbotResponses gets a reference to the given int32 and assigns it to the TotalGleanbotResponses field.
func (o *AiInsightsResponse) SetTotalGleanbotResponses(v int32) {
	o.TotalGleanbotResponses = &v
}

// GetTotalGleanbotResponsesShared returns the TotalGleanbotResponsesShared field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetTotalGleanbotResponsesShared() int32 {
	if o == nil || IsNil(o.TotalGleanbotResponsesShared) {
		var ret int32
		return ret
	}
	return *o.TotalGleanbotResponsesShared
}

// GetTotalGleanbotResponsesSharedOk returns a tuple with the TotalGleanbotResponsesShared field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetTotalGleanbotResponsesSharedOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalGleanbotResponsesShared) {
		return nil, false
	}
	return o.TotalGleanbotResponsesShared, true
}

// HasTotalGleanbotResponsesShared returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasTotalGleanbotResponsesShared() bool {
	if o != nil && !IsNil(o.TotalGleanbotResponsesShared) {
		return true
	}

	return false
}

// SetTotalGleanbotResponsesShared gets a reference to the given int32 and assigns it to the TotalGleanbotResponsesShared field.
func (o *AiInsightsResponse) SetTotalGleanbotResponsesShared(v int32) {
	o.TotalGleanbotResponsesShared = &v
}

// GetTotalGleanbotResponsesNotHelpful returns the TotalGleanbotResponsesNotHelpful field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetTotalGleanbotResponsesNotHelpful() int32 {
	if o == nil || IsNil(o.TotalGleanbotResponsesNotHelpful) {
		var ret int32
		return ret
	}
	return *o.TotalGleanbotResponsesNotHelpful
}

// GetTotalGleanbotResponsesNotHelpfulOk returns a tuple with the TotalGleanbotResponsesNotHelpful field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetTotalGleanbotResponsesNotHelpfulOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalGleanbotResponsesNotHelpful) {
		return nil, false
	}
	return o.TotalGleanbotResponsesNotHelpful, true
}

// HasTotalGleanbotResponsesNotHelpful returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasTotalGleanbotResponsesNotHelpful() bool {
	if o != nil && !IsNil(o.TotalGleanbotResponsesNotHelpful) {
		return true
	}

	return false
}

// SetTotalGleanbotResponsesNotHelpful gets a reference to the given int32 and assigns it to the TotalGleanbotResponsesNotHelpful field.
func (o *AiInsightsResponse) SetTotalGleanbotResponsesNotHelpful(v int32) {
	o.TotalGleanbotResponsesNotHelpful = &v
}

// GetDepartments returns the Departments field value if set, zero value otherwise.
func (o *AiInsightsResponse) GetDepartments() []string {
	if o == nil || IsNil(o.Departments) {
		var ret []string
		return ret
	}
	return o.Departments
}

// GetDepartmentsOk returns a tuple with the Departments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AiInsightsResponse) GetDepartmentsOk() ([]string, bool) {
	if o == nil || IsNil(o.Departments) {
		return nil, false
	}
	return o.Departments, true
}

// HasDepartments returns a boolean if a field has been set.
func (o *AiInsightsResponse) HasDepartments() bool {
	if o != nil && !IsNil(o.Departments) {
		return true
	}

	return false
}

// SetDepartments gets a reference to the given []string and assigns it to the Departments field.
func (o *AiInsightsResponse) SetDepartments(v []string) {
	o.Departments = v
}

func (o AiInsightsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AiInsightsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LastLogTimestamp) {
		toSerialize["lastLogTimestamp"] = o.LastLogTimestamp
	}
	if !IsNil(o.AssistantInsights) {
		toSerialize["assistantInsights"] = o.AssistantInsights
	}
	if !IsNil(o.TotalActiveAssistantUsers) {
		toSerialize["totalActiveAssistantUsers"] = o.TotalActiveAssistantUsers
	}
	if !IsNil(o.TotalChatMessages) {
		toSerialize["totalChatMessages"] = o.TotalChatMessages
	}
	if !IsNil(o.TotalAiSummarizations) {
		toSerialize["totalAiSummarizations"] = o.TotalAiSummarizations
	}
	if !IsNil(o.TotalAiAnswers) {
		toSerialize["totalAiAnswers"] = o.TotalAiAnswers
	}
	if !IsNil(o.TotalUpvotes) {
		toSerialize["totalUpvotes"] = o.TotalUpvotes
	}
	if !IsNil(o.TotalDownvotes) {
		toSerialize["totalDownvotes"] = o.TotalDownvotes
	}
	if !IsNil(o.TotalGleanbotResponses) {
		toSerialize["totalGleanbotResponses"] = o.TotalGleanbotResponses
	}
	if !IsNil(o.TotalGleanbotResponsesShared) {
		toSerialize["totalGleanbotResponsesShared"] = o.TotalGleanbotResponsesShared
	}
	if !IsNil(o.TotalGleanbotResponsesNotHelpful) {
		toSerialize["totalGleanbotResponsesNotHelpful"] = o.TotalGleanbotResponsesNotHelpful
	}
	if !IsNil(o.Departments) {
		toSerialize["departments"] = o.Departments
	}
	return toSerialize, nil
}

type NullableAiInsightsResponse struct {
	value *AiInsightsResponse
	isSet bool
}

func (v NullableAiInsightsResponse) Get() *AiInsightsResponse {
	return v.value
}

func (v *NullableAiInsightsResponse) Set(val *AiInsightsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAiInsightsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAiInsightsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAiInsightsResponse(val *AiInsightsResponse) *NullableAiInsightsResponse {
	return &NullableAiInsightsResponse{value: val, isSet: true}
}

func (v NullableAiInsightsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAiInsightsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


