/*
Glean Client API

# Introduction These are the public APIs to enable implementing a custom client interface to the Glean system.  # Usage guidelines This API is evolving fast. Glean will provide advance notice of any planned backwards incompatible changes along with a 6-month sunset period for anything that requires developers to adopt the new versions.  # SDK Client bindings for the API can be generated for most popular languages (Python, Java, NodeJS, etc). To do so:  Download the OpenAPI specification for the API, by clicking on one of the following options: 1. [Download JSON specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.json?branch=main&download=true) 2. [Download YAML specification](https://api.redocly.com/registry/bundle/glean/Glean%20Client%20API%20SDK%20source/v1/openapi.yaml?branch=main&download=true)  Use [openapi-generator-cli](https://github.com/OpenAPITools/openapi-generator-cli) to generate bindings for your language of choice, for example: ```bash shell $ npx @openapitools/openapi-generator-cli@latest generate -i client_api.yaml -g go ```  To see available languages: ```bash shell $ npx @openapitools/openapi-generator-cli@latest list ```  Determine the host you need to connect to. This will be the URL of the backend for your Glean deployment, for example, customer-be.glean.com 

API version: 0.9.0
Contact: support@glean.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package glean_client

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateAnswerLikesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAnswerLikesRequest{}

// UpdateAnswerLikesRequest struct for UpdateAnswerLikesRequest
type UpdateAnswerLikesRequest struct {
	// The opaque id of the answer to like.
	AnswerId int32 `json:"answerId"`
	// Glean Document ID of the Answer. The Glean Document ID is supported for cases where the Answer ID is unavailable. If both are available, using the Answer ID is preferred.
	AnswerDocId *string `json:"answerDocId,omitempty"`
	Action string `json:"action"`
}

type _UpdateAnswerLikesRequest UpdateAnswerLikesRequest

// NewUpdateAnswerLikesRequest instantiates a new UpdateAnswerLikesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAnswerLikesRequest(answerId int32, action string) *UpdateAnswerLikesRequest {
	this := UpdateAnswerLikesRequest{}
	this.AnswerId = answerId
	this.Action = action
	return &this
}

// NewUpdateAnswerLikesRequestWithDefaults instantiates a new UpdateAnswerLikesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAnswerLikesRequestWithDefaults() *UpdateAnswerLikesRequest {
	this := UpdateAnswerLikesRequest{}
	return &this
}

// GetAnswerId returns the AnswerId field value
func (o *UpdateAnswerLikesRequest) GetAnswerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AnswerId
}

// GetAnswerIdOk returns a tuple with the AnswerId field value
// and a boolean to check if the value has been set.
func (o *UpdateAnswerLikesRequest) GetAnswerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnswerId, true
}

// SetAnswerId sets field value
func (o *UpdateAnswerLikesRequest) SetAnswerId(v int32) {
	o.AnswerId = v
}

// GetAnswerDocId returns the AnswerDocId field value if set, zero value otherwise.
func (o *UpdateAnswerLikesRequest) GetAnswerDocId() string {
	if o == nil || IsNil(o.AnswerDocId) {
		var ret string
		return ret
	}
	return *o.AnswerDocId
}

// GetAnswerDocIdOk returns a tuple with the AnswerDocId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAnswerLikesRequest) GetAnswerDocIdOk() (*string, bool) {
	if o == nil || IsNil(o.AnswerDocId) {
		return nil, false
	}
	return o.AnswerDocId, true
}

// HasAnswerDocId returns a boolean if a field has been set.
func (o *UpdateAnswerLikesRequest) HasAnswerDocId() bool {
	if o != nil && !IsNil(o.AnswerDocId) {
		return true
	}

	return false
}

// SetAnswerDocId gets a reference to the given string and assigns it to the AnswerDocId field.
func (o *UpdateAnswerLikesRequest) SetAnswerDocId(v string) {
	o.AnswerDocId = &v
}

// GetAction returns the Action field value
func (o *UpdateAnswerLikesRequest) GetAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *UpdateAnswerLikesRequest) GetActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *UpdateAnswerLikesRequest) SetAction(v string) {
	o.Action = v
}

func (o UpdateAnswerLikesRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAnswerLikesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["answerId"] = o.AnswerId
	if !IsNil(o.AnswerDocId) {
		toSerialize["answerDocId"] = o.AnswerDocId
	}
	toSerialize["action"] = o.Action
	return toSerialize, nil
}

func (o *UpdateAnswerLikesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"answerId",
		"action",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateAnswerLikesRequest := _UpdateAnswerLikesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateAnswerLikesRequest)

	if err != nil {
		return err
	}

	*o = UpdateAnswerLikesRequest(varUpdateAnswerLikesRequest)

	return err
}

type NullableUpdateAnswerLikesRequest struct {
	value *UpdateAnswerLikesRequest
	isSet bool
}

func (v NullableUpdateAnswerLikesRequest) Get() *UpdateAnswerLikesRequest {
	return v.value
}

func (v *NullableUpdateAnswerLikesRequest) Set(val *UpdateAnswerLikesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAnswerLikesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAnswerLikesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAnswerLikesRequest(val *UpdateAnswerLikesRequest) *NullableUpdateAnswerLikesRequest {
	return &NullableUpdateAnswerLikesRequest{value: val, isSet: true}
}

func (v NullableUpdateAnswerLikesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAnswerLikesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


